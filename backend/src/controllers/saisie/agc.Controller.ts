import { Request, Response } from 'express';
import { AppDataSource } from '../../config/database';
import { Agc } from './../../models/saisie/agc.model';

export class AgcController {
  constructor() {
    this.getAllAgc = this.getAllAgc.bind(this);
    this.addAgc = this.addAgc.bind(this);
  }

  getAllAgc = async (req: Request, res: Response) => {
    try {
      const agc: Agc[] = await AppDataSource.manager.find(Agc);
      console.log('Dans saisie.agc.controllers : ', agc);

      res.status(200).json(agc); // ‚úÖ Bonne utilisation de `status`
    } catch (error) {
      console.error('Erreur lors de la r√©cup√©ration des AGC :', error);
      res.status(500).json({ error: 'Erreur serveur' }); // ‚úÖ Correction ici
    }
  };

  // Ajouter un nouvel engin
  addAgc = async (req: Request, res: Response) => {
    console.log('üëâ addAgc() appel√©e');
    try {
      const journ√©eAAjouter = req.body;
      const nouvelleJourn√©e = new Agc();
      nouvelleJourn√©e.date = journ√©eAAjouter.date;
      nouvelleJourn√©e.engin = journ√©eAAjouter.engin;
      nouvelleJourn√©e.voie = journ√©eAAjouter.voie;
      nouvelleJourn√©e.module = journ√©eAAjouter.module;
      nouvelleJourn√©e.fiac = journ√©eAAjouter.fiac;
      nouvelleJourn√©e.om = journ√©eAAjouter.om;
      nouvelleJourn√©e.firex = journ√©eAAjouter.firex;
      nouvelleJourn√©e.msurgent = journ√©eAAjouter.msurgent;
      nouvelleJourn√©e.systeme = journ√©eAAjouter.systeme;
      nouvelleJourn√©e.commentaire = journ√©eAAjouter.commentaire;
      nouvelleJourn√©e.specialite1 = journ√©eAAjouter.specialite1;
      nouvelleJourn√©e.specialite2 = journ√©eAAjouter.specialite2;
      nouvelleJourn√©e.specialite3 = journ√©eAAjouter.specialite3;
      nouvelleJourn√©e.specialite4 = journ√©eAAjouter.specialite4;
      nouvelleJourn√©e.agent1 = journ√©eAAjouter.agent1;
      nouvelleJourn√©e.agent2 = journ√©eAAjouter.agent2;
      nouvelleJourn√©e.agent3 = journ√©eAAjouter.agent3;
      nouvelleJourn√©e.agent4 = journ√©eAAjouter.agent4;
      nouvelleJourn√©e.heure1 = journ√©eAAjouter.heure1;
      nouvelleJourn√©e.heure2 = journ√©eAAjouter.heure2;
      nouvelleJourn√©e.heure3 = journ√©eAAjouter.heure3;
      nouvelleJourn√©e.heure4 = journ√©eAAjouter.heure4;
      nouvelleJourn√©e.jour1 = journ√©eAAjouter.jour1;
      nouvelleJourn√©e.jour2 = journ√©eAAjouter.jour2;
      nouvelleJourn√©e.jour3 = journ√©eAAjouter.jour3;
      nouvelleJourn√©e.jour4 = journ√©eAAjouter.jour4;
      nouvelleJourn√©e.en_cours = journ√©eAAjouter.en_cours;
      nouvelleJourn√©e.valide = journ√©eAAjouter.valide;
      nouvelleJourn√©e.dsmat = journ√©eAAjouter.dsmat;
      nouvelleJourn√©e.osmose = journ√©eAAjouter.osmose;
      nouvelleJourn√©e.mois = journ√©eAAjouter.mois;
      nouvelleJourn√©e.annee = journ√©eAAjouter.annee;

      await AppDataSource.manager.save(nouvelleJourn√©e);
      console.log(
        "la journ√©e Agc a bien ete enregistr√©e avec l'ID : ",
        nouvelleJourn√©e.id
      );
      res.status(201).json(nouvelleJourn√©e);
    } catch (error) {
      console.error("Erreur lors de l'ajout d'une journ√©e :", error);
      res.status(500).json({ error: 'Erreur serveur' });
    }
  };

  // r√©cup√®re les donn√©es d'une journ√©e
  getADayAgc = async (req: Request, res: Response) => {
    try {
      const { date } = req.params;

      await AppDataSource.getRepository(Agc).findOneBy({
        date: date,
      });
    } catch (error) {
      console.error(
        'Erreur lors de la r√©cup√©ration de la journ√©e (AGC) : ',
        error
      );
      res.status(500).json({ error: 'Erreur serveur' });
    }
  };
  // Supprime un engin
  deleteAgc = async (req: Request, res: Response) => {
    try {
      const journee = req.params['journee'];

      await AppDataSource.getRepository(Agc).delete({ date: journee });
      console.log('Journ√©e du ' + journee + ' supprim√©e (AGC).');
      res.status(200).json(journee);
    } catch (error) {
      console.error(
        'Erreur lors de la suppression de la journ√©e (AGC) : ',
        error
      );
      res.status(500).json({ error: 'Erreur serveur' });
    }
  };
}

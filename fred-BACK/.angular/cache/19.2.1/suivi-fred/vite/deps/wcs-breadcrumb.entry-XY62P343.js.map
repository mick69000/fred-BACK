{
  "version": 3,
  "sources": ["../../../../../../node_modules/wcs-core/dist/esm/wcs-breadcrumb.entry.js"],
  "sourcesContent": ["import { r as registerInstance, f as forceUpdate, h, H as Host, g as getElement } from './index-d9de61ce.js';\nimport { i as inheritAriaAttributes, a as inheritAttributes, s as setOrRemoveAttribute } from './helpers-ece6a2d3.js';\nimport { E as EXPAND_BTN_ARIA_LABEL_DEFAULT, I as ICONS_FONT_CHEVRON_UNICODE, N as NAV_ARIA_LABEL_DEFAULT } from './breadcrumb-constants-5d525e22.js';\nconst breadcrumbCss = \":host{--wcs-breadcrumb-icon-color:var(--wcs-semantic-color-foreground-brand);--wcs-breadcrumb-icon-font-size:0.5rem;--wcs-breadcrumb-gap:var(--wcs-semantic-spacing-base)}nav.wcs-breadcrumb-container slot[name=hidden-items]{display:none}nav.wcs-breadcrumb-container.show-hidden-items slot[name=hidden-items]{display:contents}nav.wcs-breadcrumb-container div[role=list]{display:flex;flex-wrap:wrap;align-items:center;margin:0;padding:0;list-style:none}nav.wcs-breadcrumb-container div[role=list] ::slotted(wcs-breadcrumb-item){margin-right:var(--wcs-breadcrumb-gap)}nav.wcs-breadcrumb-container div[role=list] ::slotted(wcs-breadcrumb-item:last-child){margin-right:0}nav.wcs-breadcrumb-container div[role=list] .item-not-slotted{display:flex;align-items:center;margin-right:var(--wcs-breadcrumb-gap)}nav.wcs-breadcrumb-container div[role=list] .item-not-slotted wcs-button[size=s]{--wcs-button-min-width:24px;--wcs-button-height:20px;--wcs-button-border-radius:2px;transform:translateY(2px)}nav.wcs-breadcrumb-container div[role=list] .item-not-slotted .item-icon{margin-left:calc(var(--wcs-breadcrumb-gap) - 1px);font-family:\\\"icons\\\";font-size:var(--wcs-breadcrumb-icon-font-size);color:var(--wcs-breadcrumb-icon-color);transform:translateY(1px)}\";\nconst WcsBreadcrumbStyle0 = breadcrumbCss;\nconst BREADCRUMB_INHERITED_ATTRS = [];\nconst Breadcrumb = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.inheritedAttributes = {};\n    this.maxItems = undefined;\n    this.itemsBeforeCollapse = 1;\n    this.itemsAfterCollapse = 2;\n    this.ariaLabelExpandButton = EXPAND_BTN_ARIA_LABEL_DEFAULT;\n    this.showHiddenItems = false;\n  }\n  handleCollapsePropsChange() {\n    this.updateCollapsedViewMode();\n  }\n  handleAriaLabelExpandBtnChange(newValue) {\n    var _a;\n    (_a = this.expandBtnEl) === null || _a === void 0 ? void 0 : _a.setAriaAttribute('aria-label', newValue);\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = Object.assign(Object.assign({}, inheritAriaAttributes(this.el)), inheritAttributes(this.el, BREADCRUMB_INHERITED_ATTRS));\n    this.updateCollapsedViewMode();\n  }\n  componentDidLoad() {\n    var _a;\n    (_a = this.expandBtnEl) === null || _a === void 0 ? void 0 : _a.setAriaAttribute('aria-label', this.ariaLabelExpandButton);\n  }\n  async setAriaAttribute(attr, value) {\n    setOrRemoveAttribute(this.navEl, attr, value);\n  }\n  getBreadcrumbItems() {\n    return Array.from(this.el.querySelectorAll('wcs-breadcrumb-item'));\n  }\n  shouldCollapseItems() {\n    return !!this.maxItems && this.getBreadcrumbItems().length > this.maxItems && this.itemsBeforeCollapse + this.itemsAfterCollapse <= this.maxItems;\n  }\n  updateCollapsedViewMode() {\n    if (this.shouldCollapseItems()) {\n      this.assignSlotNamesForCollapsedViewMode();\n    } else {\n      this.assignSlotNamesForNonCollapsedViewMode();\n    }\n  }\n  /**\n   * Setting slot names on breadcrumb items allows to leverage JSX in the render method.\n   */\n  assignSlotNamesForCollapsedViewMode() {\n    const breadcrumbItems = this.getBreadcrumbItems();\n    const itemBeforeExpandBtnIndex = this.itemsBeforeCollapse - 1;\n    const itemAfterExpandBtnIndex = breadcrumbItems.length - this.itemsAfterCollapse;\n    breadcrumbItems.forEach((breadcrumbItem, index) => {\n      if (index <= itemBeforeExpandBtnIndex) {\n        breadcrumbItem.slot = 'items-before-expand-btn';\n        breadcrumbItem.last = false;\n      } else if (index > itemBeforeExpandBtnIndex && index < itemAfterExpandBtnIndex) {\n        breadcrumbItem.slot = 'hidden-items';\n        breadcrumbItem.last = false;\n      } else {\n        breadcrumbItem.slot = 'items-after-expand-btn';\n        breadcrumbItem.last = index === breadcrumbItems.length - 1;\n      }\n    });\n  }\n  assignSlotNamesForNonCollapsedViewMode() {\n    const breadcrumbItems = this.getBreadcrumbItems();\n    breadcrumbItems.forEach((breadcrumbItem, index) => {\n      breadcrumbItem.slot = 'non-collapsed';\n      breadcrumbItem.last = index === breadcrumbItems.length - 1;\n    });\n  }\n  handleSlotChange() {\n    this.updateCollapsedViewMode();\n    this.showHiddenItems = false;\n    forceUpdate(this);\n  }\n  handleOnExpandBtnClick() {\n    // We leave the breadcrumb items in the hidden-items slot, without passing them to\n    // the non-collapsed slot, so that we know which items to hide again later if needed.\n    // For future implementations, the expand button could show or hide hidden items on click,\n    // with a wcs-dropdown for example.\n    this.showHiddenItems = true;\n    // We wait for the first hidden item to be visible in the DOM again\n    // to be able to focus it.\n    requestAnimationFrame(() => this.setFocusToFirstHiddenItem());\n  }\n  /**\n   * Avoid losing focus after clicking the expand button.\n   * We need to give focus back to the first breadcrumb item link that was hidden before.\n   */\n  setFocusToFirstHiddenItem() {\n    const breadcrumbItems = this.getBreadcrumbItems();\n    const firstHiddenItemIndex = this.itemsBeforeCollapse;\n    const firstHiddenItem = breadcrumbItems[firstHiddenItemIndex];\n    const firstHiddenItemSlot = firstHiddenItem.shadowRoot.querySelector('slot');\n    const breadcrumbItemLinkToFocus = firstHiddenItemSlot.assignedElements()[0];\n    breadcrumbItemLinkToFocus === null || breadcrumbItemLinkToFocus === void 0 ? void 0 : breadcrumbItemLinkToFocus.focus();\n  }\n  renderExpandAllButton() {\n    const expandBtnIsLastItem = this.itemsAfterCollapse === 0;\n    return h(\"div\", {\n      role: \"listitem\",\n      class: \"item-not-slotted\"\n    }, h(\"wcs-button\", {\n      mode: \"clear\",\n      shape: \"square\",\n      size: \"s\",\n      onClick: this.handleOnExpandBtnClick.bind(this),\n      ref: el => this.expandBtnEl = el\n    }, h(\"wcs-mat-icon\", {\n      icon: \"more_horiz\"\n    })), !expandBtnIsLastItem && h(\"span\", {\n      class: \"item-icon\",\n      \"aria-hidden\": \"true\"\n    }, ICONS_FONT_CHEVRON_UNICODE));\n  }\n  render() {\n    const showExpandBtn = this.shouldCollapseItems() && !this.showHiddenItems;\n    return h(Host, {\n      key: '944e877808887ad3933072e35d0760df00e5ab68'\n    }, h(\"nav\", Object.assign({\n      key: '210476d38cf668330fa9ce0f6ab009499d6afe8d',\n      class: `wcs-breadcrumb-container${this.showHiddenItems ? ' show-hidden-items' : ''}`,\n      \"aria-label\": NAV_ARIA_LABEL_DEFAULT\n    }, this.inheritedAttributes, {\n      ref: el => this.navEl = el\n    }), h(\"div\", {\n      key: '882146b18d16c9fe5033a6677a6a3281696af183',\n      role: \"list\"\n    }, h(\"slot\", {\n      key: '14491fd9df9d3901ae3c5f4473ddf2ebfe36a1fb',\n      onSlotchange: this.handleSlotChange.bind(this)\n    }), h(\"slot\", {\n      key: 'b077183b3a4abec4f40cd87974dac248b743fa13',\n      name: \"non-collapsed\"\n    }), h(\"slot\", {\n      key: 'fb3cb5779492c275cb47619766df150da71f4daa',\n      name: \"items-before-expand-btn\"\n    }), h(\"slot\", {\n      key: '86889f6be0e843b55cc8868df6abd9d7af4cf7d9',\n      name: \"hidden-items\"\n    }), showExpandBtn && this.renderExpandAllButton(), h(\"slot\", {\n      key: 'b5c680f8c61d7491ab5f180d566b2718d1fd684a',\n      name: \"items-after-expand-btn\"\n    }))));\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"maxItems\": [\"handleCollapsePropsChange\"],\n      \"itemsBeforeCollapse\": [\"handleCollapsePropsChange\"],\n      \"itemsAfterCollapse\": [\"handleCollapsePropsChange\"],\n      \"ariaLabelExpandButton\": [\"handleAriaLabelExpandBtnChange\"]\n    };\n  }\n};\nBreadcrumb.style = WcsBreadcrumbStyle0;\nexport { Breadcrumb as wcs_breadcrumb };\n\n"],
  "mappings": "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",
  "names": []
}

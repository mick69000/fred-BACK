{
  "version": 3,
  "sources": ["../../../../../../node_modules/wcs-core/dist/esm/control-component-interface-9f09e520.js"],
  "sourcesContent": ["function isControlComponentWithLabel(el) {\n  if (typeof el !== 'object' || el === null || el === undefined) return false;\n  return 'getLabel' in el;\n}\n/**\n\n * Extracts the text content from nodes assigned to a slot in a Web Component's Shadow DOM.\n *\n * @param element - The Web Component HTMLElement containing a Shadow DOM with slots\n * @param slotName - Optional name of the slot to target (if not provided, targets the default slot)\n * @returns The combined text content of all nodes assigned to the specified slot, with normalized whitespace\n *\n * @throws Will not throw errors, but returns empty string if the element has no Shadow DOM,\n *         no matching slot, or no assigned nodes\n */\nfunction getSlottedContentText(element, slotName) {\n  if (!element.shadowRoot) {\n    return '';\n  }\n  const slotSelector = typeof slotName === 'string' ? `slot[name=\"${slotName}\"]` : 'slot:not([name])';\n  const slotElement = element.shadowRoot.querySelector(slotSelector);\n  if (!slotElement) {\n    return '';\n  }\n  const assignedNodes = slotElement.assignedNodes({\n    flatten: true\n  });\n  if (!assignedNodes.length) {\n    return '';\n  }\n  return assignedNodes.map(node => node.textContent || '').filter(text => text.trim() !== '') // we skip empty text nodes\n  .join(' ').replace(/\\s+/g, ' ').trim();\n}\nexport { getSlottedContentText as g, isControlComponentWithLabel as i };\n\n"],
  "mappings": ";AAAA,SAAS,4BAA4B,IAAI;AACvC,MAAI,OAAO,OAAO,YAAY,OAAO,QAAQ,OAAO,OAAW,QAAO;AACtE,SAAO,cAAc;AACvB;AAYA,SAAS,sBAAsB,SAAS,UAAU;AAChD,MAAI,CAAC,QAAQ,YAAY;AACvB,WAAO;AAAA,EACT;AACA,QAAM,eAAe,OAAO,aAAa,WAAW,cAAc,QAAQ,OAAO;AACjF,QAAM,cAAc,QAAQ,WAAW,cAAc,YAAY;AACjE,MAAI,CAAC,aAAa;AAChB,WAAO;AAAA,EACT;AACA,QAAM,gBAAgB,YAAY,cAAc;AAAA,IAC9C,SAAS;AAAA,EACX,CAAC;AACD,MAAI,CAAC,cAAc,QAAQ;AACzB,WAAO;AAAA,EACT;AACA,SAAO,cAAc,IAAI,UAAQ,KAAK,eAAe,EAAE,EAAE,OAAO,UAAQ,KAAK,KAAK,MAAM,EAAE,EACzF,KAAK,GAAG,EAAE,QAAQ,QAAQ,GAAG,EAAE,KAAK;AACvC;",
  "names": []
}

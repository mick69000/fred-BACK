{
  "version": 3,
  "sources": ["../../../../../../node_modules/wcs-core/dist/esm/wcs-native-select.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, H as Host, g as getElement } from './index-d9de61ce.js';\nimport { S as SelectArrow } from './select-arrow-e62de386.js';\nconst nativeSelectCss = \":host{--wcs-native-select-line-height:var(--wcs-semantic-font-line-height-large);--wcs-native-select-size-m:var(--wcs-semantic-size-m);--wcs-native-select-font-size-m:var(--wcs-semantic-font-size-m);--wcs-native-select-size-l:var(--wcs-semantic-size-l);--wcs-native-select-font-size-l:var(--wcs-semantic-font-size-l);--wcs-native-select-border-radius:var(--wcs-semantic-border-radius-base);--wcs-native-select-background-color:var(--wcs-semantic-color-background-control-default);--wcs-native-select-border-color-default:var(--wcs-semantic-color-border-primary);--wcs-native-select-border-color-disabled:var(--wcs-semantic-color-border-disabled);--wcs-native-select-border-color-focus:var(--wcs-semantic-color-border-control-focus);--wcs-native-select-border-color-error:var(--wcs-semantic-color-border-critical);--wcs-native-select-border-style-default:solid;--wcs-native-select-border-style-focus:var(--wcs-semantic-border-style-focus-control);--wcs-native-select-border-width:var(--wcs-semantic-border-width-default);--wcs-native-select-border-width-focus:var(--wcs-semantic-border-width-large);--wcs-native-select-value-color:var(--wcs-semantic-color-text-primary);--wcs-native-select-value-font-weight:var(--wcs-semantic-font-weight-medium);--wcs-native-select-value-font-style:normal;--wcs-native-select-internal-padding-horizontal:var(--wcs-native-select-padding-horizontal-m);--wcs-native-select-padding-horizontal-m:var(--wcs-semantic-spacing-large);--wcs-native-select-padding-horizontal-l:var(--wcs-semantic-spacing-large);--wcs-native-select-arrow-color:var(--wcs-semantic-color-foreground-brand);--wcs-native-select-arrow-color-disabled:var(--wcs-semantic-color-foreground-disabled);--wcs-native-select-text-color-disabled:var(--wcs-semantic-color-text-disabled);--wcs-native-select-placeholder-color:var(--wcs-semantic-color-text-tertiary);--wcs-native-select-placeholder-font-weight:var(--wcs-semantic-font-weight-roman);--wcs-native-select-placeholder-font-style:var(--wcs-semantic-font-style-control-placeholder);--wcs-native-select-option-color:var(--wcs-semantic-color-text-primary);--wcs-native-select-option-font-style:normal;--wcs-native-select-option-selected-color:var(--wcs-semantic-color-text-primary)}::slotted(select){box-sizing:border-box;-moz-appearance:none !important;-webkit-appearance:none !important;appearance:none !important;background-color:var(--wcs-native-select-background-color);color:var(--wcs-native-select-value-color);border-radius:var(--wcs-native-select-border-radius);border:none;outline:var(--wcs-native-select-border-style-default) var(--wcs-native-select-border-width) var(--wcs-native-select-border-color-default);outline-offset:calc(var(--wcs-native-select-border-width) * -1);user-select:none;cursor:pointer;line-height:var(--wcs-native-select-line-height);font-size:inherit;opacity:1;max-width:100%;flex-grow:1;padding-right:calc(var(--wcs-native-select-internal-padding-horizontal) + 24px);padding-left:var(--wcs-native-select-internal-padding-horizontal)}::slotted(select:disabled){cursor:not-allowed;color:var(--wcs-native-select-text-color-disabled);outline:var(--wcs-native-select-border-style-default) var(--wcs-native-select-border-width) var(--wcs-native-select-border-color-disabled);--wcs-native-select-background-color:var(--wcs-semantic-color-background-control-disabled);--wcs-native-select-value-color:var(--wcs-native-select-text-color-disabled)}::slotted(select[aria-invalid=true]){outline-style:var(--wcs-native-select-border-style-default);outline-color:var(--wcs-native-select-border-color-error) !important;outline-offset:calc(var(--wcs-native-select-border-width) * -1)}:host([data-disabled]) .select-wrapper .arrow-container .arrow{fill:var(--wcs-native-select-arrow-color-disabled)}:host([data-size=m]){font-size:var(--wcs-native-select-font-size-m);--wcs-native-select-internal-padding-horizontal:var(--wcs-native-select-padding-horizontal-m)}:host([data-size=m]) ::slotted(select){height:var(--wcs-native-select-size-m)}:host([data-size=l]){font-size:var(--wcs-native-select-font-size-l);--wcs-native-select-internal-padding-horizontal:var(--wcs-native-select-padding-horizontal-l)}:host([data-size=l]) ::slotted(select){height:var(--wcs-native-select-size-l)}::slotted(select:focus-visible){outline:var(--wcs-native-select-border-style-focus) var(--wcs-native-select-border-width-focus) var(--wcs-native-select-border-color-focus);outline-offset:calc(var(--wcs-native-select-border-width-focus) * -1)}.select-wrapper{position:relative;display:flex;flex-wrap:nowrap}svg{flex-shrink:0}.arrow{fill:var(--wcs-native-select-arrow-color)}.arrow-container{pointer-events:none;display:flex;align-items:center;vertical-align:center;position:absolute;top:0;bottom:0;right:calc(var(--wcs-native-select-internal-padding-horizontal) - 4px);margin:auto 0}\";\nconst WcsNativeSelectStyle0 = nativeSelectCss;\nconst NativeSelect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.SLOTTED_SELECT_TRACKED_ATTRIBUTES_LIST = ['disabled'];\n    this.size = 'm';\n    this.required = false;\n    this.expanded = false;\n    this.disabled = undefined;\n  }\n  requiredChanged(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      if (!this.selectElement) return;\n      this.selectElement.required = this.required;\n    }\n  }\n  componentWillLoad() {\n    this.selectElement = this.el.querySelector('select');\n    if (!this.selectElement) throw new Error(\"wcs-native-select must be used with a native slotted select, please refer to the documentation.\");\n    this.onSelectedOptionChange();\n    /**\n     * We use an event listener to apply the default style to the select when user chose an active option\n     */\n    this.selectElement.addEventListener('change', () => {\n      this.onSelectedOptionChange();\n    });\n    this.observer = new MutationObserver(mutations => {\n      const hasSpiedAttrMutation = mutations.filter(m => this.SLOTTED_SELECT_TRACKED_ATTRIBUTES_LIST.includes(m.attributeName)).length > 0;\n      if (hasSpiedAttrMutation) {\n        this.updateHostAttributeWithSlottedSelect();\n      }\n      // A workaround to detect when the select is reset by using a class change on the select element. For example\n      // angular add/remove ng-pristine and ng-dirty classes on the form controls when the form is reset.\n      // Not the best solution but it works since we cannot detect the reset event on the native select element.\n      if (mutations.filter(m => m.attributeName === 'class').length > 0) {\n        this._updateStyles();\n      }\n    });\n    this.updateHostAttributeWithSlottedSelect();\n    this.observer.observe(this.selectElement, {\n      attributes: true\n    });\n  }\n  async setAriaAttribute(attr, value) {\n    if (!this.selectElement) return;\n    this.selectElement.setAttribute(attr, value);\n  }\n  onSelectedOptionChange() {\n    this._updateStyles();\n  }\n  _updateStyles() {\n    if (this.isPlaceholderOptionSelected()) {\n      this.applyPlaceholderStylesOnNativeSlottedSelectElement();\n    } else {\n      this.applySelectedOptionStylesOnNativeSlottedSelectElement();\n    }\n  }\n  isPlaceholderOptionSelected() {\n    var _a;\n    return ((_a = Array.from(this.selectElement.options).filter(o => o.selected)[0]) === null || _a === void 0 ? void 0 : _a.disabled) == true;\n  }\n  /**\n   * This method should always unset all styles modified by the `applyPlaceholderStylesOnNativeSlottedSelectElement()`\n   * @private\n   */\n  applySelectedOptionStylesOnNativeSlottedSelectElement() {\n    this.selectElement.style.color = \"var(--wcs-native-select-value-color)\";\n    this.selectElement.style.fontStyle = \"var(--wcs-native-select-value-font-style)\";\n    this.selectElement.style.fontWeight = \"var(--wcs-native-select-value-font-weight)\";\n    Array.from(this.selectElement.options).forEach(option => {\n      option.style.fontStyle = \"var(--wcs-native-select-option-font-style)\";\n      if (!option.disabled) {\n        option.style.color = \"var(--wcs-native-select-option-color)\";\n      }\n    });\n  }\n  /**\n   * This method apply styles when the placeholder is shown.\n   *\n   * We use javascript because we cannot achieve that behaviour in pure css when the native select is not required\n   * @private\n   */\n  applyPlaceholderStylesOnNativeSlottedSelectElement() {\n    this.selectElement.style.color = \"var(--wcs-native-select-placeholder-color)\";\n    this.selectElement.style.fontWeight = \"var(--wcs-native-select-placeholder-font-weight)\";\n    this.selectElement.style.fontStyle = \"var(--wcs-native-select-placeholder-font-style)\";\n    Array.from(this.selectElement.options).forEach(option => {\n      option.style.fontStyle = \"var(--wcs-native-select-option-font-style)\";\n      if (!option.disabled) {\n        option.style.color = \"var(--wcs-native-select-option-color)\";\n      }\n    });\n  }\n  updateHostAttributeWithSlottedSelect() {\n    var _a;\n    this.disabled = (_a = this.selectElement) === null || _a === void 0 ? void 0 : _a.hasAttribute('disabled');\n  }\n  disconnectedCallback() {\n    var _a, _b;\n    (_a = this.observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n    (_b = this.selectElement) === null || _b === void 0 ? void 0 : _b.removeEventListener(\"change\", () => {\n      this.onSelectedOptionChange();\n    });\n  }\n  /**\n   * Use this method to force the component to update its styles. It can be useful when the select is reset (with a placeholder).\n   */\n  async updateStyles() {\n    // Note : we try to automatically detect if the select is reset with the onreset event and with a mutation\n    // observer on the select element. But it seems that the onreset event is not fired when the select is reset.\n    // and the mutation observer is not fired when the select is reset with the reset() method on the form.\n    // So we have to let the user call this method manually when he reset the select.\n    this._updateStyles();\n  }\n  render() {\n    return h(Host, {\n      key: '73d21d77f3b725f2867f447f9b891a16a26c842f',\n      class: `${this.expanded ? 'expanded' : ''}`,\n      \"data-disabled\": this.disabled,\n      \"data-size\": this.size\n    }, h(\"div\", {\n      key: '1d138a4f201b3772dd2f985e01941d2ad60536ee',\n      class: \"select-wrapper\"\n    }, h(\"slot\", {\n      key: '3b420677784de42d79acd852af58d577de12834e'\n    }), h(\"div\", {\n      key: 'e4562159d84b7d94d942be2f7e5b716ed3e4f23f',\n      class: \"arrow-container\"\n    }, h(SelectArrow, {\n      key: '7cf362081f043af30f8f62ba8615e821ac3c6511',\n      up: this.expanded\n    }))));\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"required\": [\"requiredChanged\"]\n    };\n  }\n};\nNativeSelect.style = WcsNativeSelectStyle0;\nexport { NativeSelect as wcs_native_select };\n\n"],
  "mappings": "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",
  "names": []
}

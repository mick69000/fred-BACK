{
  "version": 3,
  "sources": ["../../../../../../node_modules/wcs-core/dist/esm/wcs-radio-group.entry.js"],
  "sourcesContent": ["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-d9de61ce.js';\nimport { s as setOrRemoveAttribute, c as isSpaceKey, d as isEnterKey, u as isDownArrowKey, v as isRightArrowKey, w as isUpArrowKey, x as isLeftArrowKey, n as isTabKey } from './helpers-ece6a2d3.js';\nconst radioGroupCss = \":host{display:flex;--wcs-radio-group-gap:var(--wcs-semantic-spacing-base);--wcs-radio-group-option-height:var(--wcs-semantic-size-m);--wcs-radio-group-option-gap:var(--wcs-semantic-spacing-small);--wcs-radio-group-option-padding:var(--wcs-semantic-spacing-small) var(--wcs-semantic-spacing-small);--wcs-radio-group-option-border-radius:var(--wcs-semantic-border-radius-base);--wcs-radio-group-option-background-color:var(--wcs-semantic-color-background-surface-accent-lightest)}:host([mode=radio]){flex-direction:column;gap:var(--wcs-radio-group-gap)}:host([mode=option]){box-sizing:border-box;height:var(--wcs-radio-group-option-height);display:inline-flex;flex-direction:row;align-items:center;gap:var(--wcs-radio-group-option-gap);padding:var(--wcs-radio-group-option-padding);background-color:var(--wcs-radio-group-option-background-color);border-radius:var(--wcs-radio-group-option-border-radius)}:host([mode=horizontal]){justify-content:space-between}\";\nconst WcsRadioGroupStyle0 = radioGroupCss;\nconst RadioGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.wcsChange = createEvent(this, \"wcsChange\", 7);\n    this.value = undefined;\n    this.name = undefined;\n    this.mode = 'radio';\n  }\n  onValueChangeHandler(value) {\n    this.updateRadioTabIndex(value);\n    this.updateAllRadioState();\n  }\n  async setAriaAttribute(attr, value) {\n    setOrRemoveAttribute(this.el, attr, value);\n  }\n  componentDidLoad() {\n    this.onValueChangeHandler(this.value);\n    this.updateAllRadioModeAndName();\n  }\n  onSlotChange() {\n    this.updateRadioTabIndex(this.value);\n    this.updateAllRadioModeAndName();\n  }\n  updateAllRadioState() {\n    this.getSlottedRadios().forEach(r => r.updateState());\n  }\n  updateAllRadioModeAndName() {\n    this.getSlottedRadios().forEach(r => {\n      r.mode = this.mode;\n      r.name = this.name;\n    });\n  }\n  updateRadioTabIndex(value) {\n    const radios = this.getSlottedRadios();\n    // Get the first radio that is not disabled and the checked one\n    const first = radios.find(radio => !radio.disabled);\n    const checked = radios.find(radio => radio.value === value && !radio.disabled);\n    if (!first && !checked) {\n      return;\n    }\n    // If an enabled checked radio exists, set it to be the focusable radio\n    // otherwise we default to focus the first radio\n    const focusable = checked || first;\n    for (const radio of radios) {\n      const tabindex = radio === focusable ? 0 : -1;\n      radio.setTabIndex(tabindex);\n    }\n  }\n  getSlottedRadios() {\n    return Array.from(this.el.querySelectorAll('wcs-radio'));\n  }\n  getSlottedRadiosNotDisabled() {\n    return Array.from(this.getSlottedRadios().filter(radio => !radio.disabled));\n  }\n  handleRadioClick(event) {\n    this.value = event.detail.value;\n    this.wcsChange.emit({\n      value: event.detail.value\n    });\n  }\n  async handleKeyDown(ev) {\n    const radiosNotDisabled = this.getSlottedRadiosNotDisabled();\n    const previousSelected = radiosNotDisabled.findIndex(r => r === ev.target);\n    let indexToSelect;\n    if (isSpaceKey(ev) || isEnterKey(ev)) {\n      ev.preventDefault();\n      indexToSelect = previousSelected;\n    } else if (isDownArrowKey(ev) || isRightArrowKey(ev)) {\n      ev.preventDefault();\n      // Check the next wcs-radio from the previous selected\n      indexToSelect = (previousSelected + 1) % radiosNotDisabled.length; // to return at the beginning on the list when we are on the last index\n    } else if (isUpArrowKey(ev) || isLeftArrowKey(ev)) {\n      ev.preventDefault();\n      // Check the previous wcs-radio from the previous selected\n      indexToSelect = (previousSelected - 1 + radiosNotDisabled.length) % radiosNotDisabled.length; // To return at the end of the list when we are on index=0\n    } else if (isTabKey(ev)) {\n      return;\n    }\n    const radioToSelect = radiosNotDisabled[indexToSelect];\n    if (radioToSelect) {\n      radioToSelect.focus();\n      if (this.value !== radioToSelect.value) {\n        this.wcsChange.emit({\n          value: radioToSelect.value\n        });\n      }\n      this.value = radioToSelect.value;\n    }\n  }\n  render() {\n    return h(Host, {\n      key: '7e9a6c9412d6ababef068d5766d79a790c3e531f',\n      role: \"radiogroup\"\n    }, h(\"slot\", {\n      key: '6163831fbd131047a6f3556c76b1628f41453b6b',\n      name: \"option\",\n      onSlotchange: this.onSlotChange.bind(this)\n    }));\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"value\": [\"onValueChangeHandler\"],\n      \"name\": [\"updateAllRadioModeAndName\"],\n      \"mode\": [\"updateAllRadioModeAndName\"]\n    };\n  }\n};\nRadioGroup.style = WcsRadioGroupStyle0;\nexport { RadioGroup as wcs_radio_group };\n\n"],
  "mappings": "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",
  "names": []
}

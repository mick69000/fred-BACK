{
  "version": 3,
  "sources": ["../../../../../../node_modules/wcs-core/dist/esm/wcs-input.entry.js"],
  "sourcesContent": ["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-d9de61ce.js';\nimport { r as debounceEvent, i as inheritAriaAttributes, a as inheritAttributes, s as setOrRemoveAttribute, t as findItemLabel } from './helpers-ece6a2d3.js';\nconst WcsInputSizeValues = ['s', 'm', 'l']; // as const keyword is used to infer and preserve the exact literal values of an array or object.\nfunction isWcsInputSize(size) {\n  // @ts-ignore : ignore size type, as it is checked with WcsInputSizeValues\n  return WcsInputSizeValues.includes(size);\n}\nconst inputCss = \":host{--wcs-input-icon-color-default:var(--wcs-semantic-color-foreground-brand);--wcs-input-icon-color-focus:var(--wcs-semantic-color-foreground-brand);--wcs-input-icon-color-disabled:var(--wcs-semantic-color-foreground-disabled);--wcs-input-background-color:var(--wcs-semantic-color-background-control-default);--wcs-input-border-radius-left:var(--wcs-semantic-border-radius-base);--wcs-input-border-radius-right:var(--wcs-semantic-border-radius-base);--wcs-input-border-width:var(--wcs-semantic-border-width-default);--wcs-input-border-width-focus:var(--wcs-semantic-border-width-large);--wcs-input-height-l:var(--wcs-semantic-size-l);--wcs-input-height-m:var(--wcs-semantic-size-m);--wcs-input-height-s:var(--wcs-semantic-size-s);--wcs-input-font-size-l:var(--wcs-semantic-font-size-l);--wcs-input-font-size-m:var(--wcs-semantic-font-size-m);--wcs-input-font-size-s:var(--wcs-semantic-font-size-s);--wcs-input-prefix-suffix-background-color:var(--wcs-semantic-color-background-surface-accent-lighter);--wcs-input-prefix-suffix-color:var(--wcs-semantic-color-foreground-on-accent);--wcs-input-prefix-suffix-color-disabled:var(--wcs-semantic-color-text-disabled);--wcs-input-prefix-suffix-font-weight:var(--wcs-semantic-font-weight-medium);--wcs-input-border-style-default:solid;--wcs-input-border-style-focus:var(--wcs-semantic-border-style-focus-control);--wcs-input-border-color-default:var(--wcs-semantic-color-border-primary);--wcs-input-border-color-disabled:var(--wcs-semantic-color-border-disabled);--wcs-input-border-color-focus:var(--wcs-semantic-color-border-control-focus);--wcs-input-reveal-password-button-border-color-focus:var(--wcs-semantic-color-border-focus-base);--wcs-input-border-color-error:var(--wcs-semantic-color-border-critical);--wcs-input-value-color:var(--wcs-semantic-color-text-primary);--wcs-input-value-font-weight:var(--wcs-semantic-font-weight-medium);--wcs-input-placeholder-color:var(--wcs-semantic-color-text-tertiary);--wcs-input-placeholder-font-weight:var(--wcs-semantic-font-weight-roman);--wcs-input-placeholder-font-style:var(--wcs-semantic-font-style-control-placeholder);--wcs-input-text-color-disabled:var(--wcs-semantic-color-text-disabled);--wcs-input-min-height:var(--wcs-semantic-size-s);--wcs-input-padding-horizontal-s:calc(1.5 * var(--wcs-semantic-spacing-base));--wcs-input-padding-horizontal-m:var(--wcs-semantic-spacing-large);--wcs-input-padding-horizontal-l:var(--wcs-semantic-spacing-large);--wcs-input-gap:var(--wcs-semantic-spacing-base);display:flex;width:100%;height:var(--wcs-input-host-height);box-sizing:border-box;border-radius:var(--wcs-input-border-radius-left) var(--wcs-input-border-radius-right) var(--wcs-input-border-radius-right) var(--wcs-input-border-radius-left);background-color:var(--wcs-input-background-color);outline:var(--wcs-input-border-style-default) var(--wcs-input-border-width) var(--wcs-input-border-color-default);outline-offset:calc(var(--wcs-input-border-width) * -1);background-clip:padding-box;gap:var(--wcs-input-gap)}:host input{overflow:hidden;height:var(--wcs-input-host-height);width:100%;padding:0;background-color:transparent;font-family:var(--wcs-font-sans-serif);color:var(--wcs-input-value-color);font-weight:var(--wcs-input-value-font-weight) !important;border:none;font-size:var(--wcs-input-font-size, 1rem);line-height:1.5}:host input::placeholder{color:var(--wcs-input-placeholder-color);opacity:1;font-weight:var(--wcs-input-placeholder-font-weight);font-style:var(--wcs-input-placeholder-font-style)}:host input:focus{box-shadow:none;outline:0}:host button.toggle_password{background:transparent;border:none;color:inherit;cursor:pointer}:host button.toggle_password:focus-visible{outline:var(--wcs-semantic-border-width-large) dashed var(--wcs-input-reveal-password-button-border-color-focus);outline-offset:calc(-2 * var(--wcs-input-border-width-focus));border-radius:0.1rem}:host .prefix,:host .suffix{color:var(--wcs-input-prefix-suffix-color);display:flex;white-space:nowrap;align-items:center;font-size:var(--wcs-input-font-size, 1rem);padding:0 calc(var(--wcs-input-padding-horizontal-m) / 2);font-weight:var(--wcs-input-prefix-suffix-font-weight) !important;background-color:var(--wcs-input-prefix-suffix-background-color)}:host .prefix{border-radius:var(--wcs-internal-input-border-radius-left) 0 0 var(--wcs-internal-input-border-radius-left)}:host .suffix{border-radius:0 var(--wcs-internal-input-border-radius-right) var(--wcs-internal-input-border-radius-right) 0}:host wcs-mat-icon{color:var(--wcs-input-icon-color-default)}:host([size=l]){--wcs-input-host-height:var(--wcs-input-height-l);--wcs-input-font-size:var(--wcs-input-font-size-l);padding-left:calc(var(--wcs-input-padding-horizontal-l));padding-right:calc(var(--wcs-input-padding-horizontal-l))}:host([size=m]){--wcs-input-host-height:var(--wcs-input-height-m);--wcs-input-font-size:var(--wcs-input-font-size-m);padding-left:calc(var(--wcs-input-padding-horizontal-m));padding-right:calc(var(--wcs-input-padding-horizontal-m))}:host([size=s]){--wcs-input-host-height:var(--wcs-input-height-s);--wcs-input-font-size:var(--wcs-input-font-size-s);padding-left:calc(var(--wcs-input-padding-horizontal-s));padding-right:calc(var(--wcs-input-padding-horizontal-s))}:host([state=error]){outline-color:var(--wcs-input-border-color-error) !important}:host([data-has-prefix]){padding-left:0}:host([data-has-suffix]){padding-right:0}:host([disabled]){cursor:not-allowed;outline:var(--wcs-input-border-style-default) var(--wcs-input-border-width) var(--wcs-input-border-color-disabled);--wcs-input-background-color:var(--wcs-semantic-color-background-control-disabled)}:host([disabled]) input{cursor:not-allowed;color:var(--wcs-input-text-color-disabled)}:host([disabled]) input::placeholder{color:var(--wcs-input-text-color-disabled)}:host([disabled]) .prefix,:host([disabled]) .suffix{color:var(--wcs-input-prefix-suffix-color-disabled);cursor:text}:host([disabled]) wcs-mat-icon{color:var(--wcs-input-icon-color-disabled);cursor:not-allowed}:host([readonly]){--wcs-input-background-color:var(--wcs-semantic-color-background-control-readonly);--wcs-input-border-width:0}:host(:focus-within){outline:var(--wcs-input-border-style-focus) var(--wcs-input-border-width-focus) var(--wcs-input-border-color-focus);outline-offset:calc(var(--wcs-input-border-width-focus) * -1)}:host(:focus-within) wcs-mat-icon{color:var(--wcs-input-icon-color-focus)}\";\nconst WcsInputStyle0 = inputCss;\nconst INPUT_INHERITED_ATTRS = ['tabindex', 'title'];\nconst Input = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.wcsInput = createEvent(this, \"wcsInput\", 7);\n    this.wcsChange = createEvent(this, \"wcsChange\", 7);\n    this.wcsBlur = createEvent(this, \"wcsBlur\", 7);\n    this.wcsFocus = createEvent(this, \"wcsFocus\", 7);\n    this.inputId = `wcs-input-${inputIds++}`;\n    this.inheritedAttributes = {};\n    this.iconPassword = \"visibility\";\n    this.onInput = ev => {\n      const input = ev.target;\n      if (input) {\n        this.value = input.value || '';\n      }\n      this.wcsInput.emit(ev);\n    };\n    this.onChange = _ => {\n      this.wcsChange.emit({\n        value: this.nativeInput.value\n      });\n    };\n    this.onBlur = ev => {\n      if (this.fireFocusEvents) {\n        this.wcsBlur.emit(ev);\n      }\n    };\n    this.onFocus = ev => {\n      if (this.fireFocusEvents) {\n        this.wcsFocus.emit(ev);\n      }\n    };\n    this.fireFocusEvents = true;\n    this.passwordReveal = false;\n    this.accept = undefined;\n    this.autocapitalize = 'off';\n    this.autocomplete = 'off';\n    this.autocorrect = 'off';\n    this.autofocus = false;\n    this.debounce = 0;\n    this.prefixLabel = undefined;\n    this.suffixLabel = undefined;\n    this.disabled = false;\n    this.enterkeyhint = undefined;\n    this.size = 'm';\n    this.icon = undefined;\n    this.inputmode = undefined;\n    this.max = undefined;\n    this.maxlength = undefined;\n    this.min = undefined;\n    this.minlength = undefined;\n    this.multiple = undefined;\n    this.name = this.inputId;\n    this.hidePasswordButtonAriaLabel = \"Cacher le mot de passe\";\n    this.showPasswordButtonAriaLabel = \"Afficher le mot de passe\";\n    this.pattern = undefined;\n    this.placeholder = undefined;\n    this.readonly = false;\n    this.required = false;\n    this.spellcheck = false;\n    this.state = 'initial';\n    this.step = undefined;\n    this.type = 'text';\n    this.value = '';\n  }\n  debounceChanged() {\n    this.wcsInput = debounceEvent(this.wcsInput, this.debounce);\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = Object.assign(Object.assign({}, inheritAriaAttributes(this.el)), inheritAttributes(this.el, INPUT_INHERITED_ATTRS));\n    if (!isWcsInputSize(this.size)) {\n      console.warn(`Invalid size value for wcs-input : \"${this.size}\". Must be one of \"${WcsInputSizeValues.join(', ')}\"`);\n      this.size = \"m\"; // Default fallback value\n    }\n  }\n  connectedCallback() {\n    this.debounceChanged();\n    {\n      document.dispatchEvent(new CustomEvent('wcsInputDidLoad', {\n        detail: this.el\n      }));\n    }\n  }\n  disconnectedCallback() {\n    {\n      document.dispatchEvent(new CustomEvent('wcsInputDidUnload', {\n        detail: this.el\n      }));\n    }\n  }\n  /**\n   * Sets blur on the native `input` in `wcs-input`. Use this method instead of the global\n   * `input.blur()`.\n   * @internal\n   */\n  async setBlur() {\n    if (this.nativeInput) {\n      this.nativeInput.blur();\n    }\n  }\n  /**\n   * Returns the native `<input>` element used under the hood.\n   */\n  getInputElement() {\n    return Promise.resolve(this.nativeInput);\n  }\n  async setAriaAttribute(attr, value) {\n    setOrRemoveAttribute(this.nativeInput, attr, value);\n  }\n  getValueAsString() {\n    return typeof this.value === 'number' ? this.value.toString() : (this.value || '').toString();\n  }\n  passwordRevealIconClick() {\n    this.passwordReveal = !this.passwordReveal;\n  }\n  onPasswordRevealChange() {\n    this.iconPassword = this.passwordReveal ? 'visibility_off' : 'visibility';\n  }\n  render() {\n    const value = this.getValueAsString();\n    const labelId = this.inputId + '-lbl';\n    const label = findItemLabel(this.el);\n    if (label) {\n      label.id = labelId;\n    }\n    return h(Host, {\n      key: '987bb9b2e0f16edc255e3cd33a92fad04a99369f',\n      \"aria-disabled\": this.disabled ? 'true' : null,\n      \"data-has-prefix\": !!this.prefixLabel,\n      \"data-has-suffix\": !!this.suffixLabel\n    }, this.prefixLabel ? h(\"span\", {\n      class: \"prefix\",\n      part: \"prefix\"\n    }, this.prefixLabel) : null, this.icon ? h(\"wcs-mat-icon\", {\n      icon: this.icon,\n      size: \"m\"\n    }) : null, h(\"input\", Object.assign({\n      key: '395351bfae844314151d7cbdd12f9b4047294b6a',\n      class: \"native-input\",\n      ref: input => this.nativeInput = input,\n      \"aria-labelledby\": label ? labelId : null,\n      disabled: this.disabled,\n      accept: this.accept,\n      autoCapitalize: this.autocapitalize,\n      autoComplete: this.autocomplete,\n      autoCorrect: this.autocorrect,\n      autoFocus: this.autofocus,\n      enterKeyHint: this.enterkeyhint,\n      inputMode: this.inputmode,\n      min: this.min,\n      max: this.max,\n      minLength: this.minlength,\n      maxLength: this.maxlength,\n      multiple: this.multiple,\n      name: this.name,\n      pattern: this.pattern,\n      placeholder: this.placeholder || '',\n      readOnly: this.readonly,\n      required: this.required,\n      spellcheck: this.spellcheck,\n      step: this.step,\n      type: this.passwordReveal ? 'text' : this.type,\n      value: value,\n      onInput: this.onInput,\n      onChange: this.onChange,\n      onBlur: this.onBlur,\n      onFocus: this.onFocus\n    }, this.inheritedAttributes)), this.type === \"password\" ? h(\"button\", {\n      title: this.passwordReveal ? this.hidePasswordButtonAriaLabel : this.showPasswordButtonAriaLabel,\n      class: \"toggle_password\",\n      onClick: () => this.passwordRevealIconClick()\n    }, h(\"wcs-mat-icon\", {\n      icon: this.iconPassword,\n      size: \"m\"\n    })) : null, this.suffixLabel ? h(\"span\", {\n      class: \"suffix\",\n      part: \"suffix\"\n    }, this.suffixLabel) : null);\n  }\n  static get delegatesFocus() {\n    return true;\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"debounce\": [\"debounceChanged\"],\n      \"passwordReveal\": [\"onPasswordRevealChange\"]\n    };\n  }\n};\nlet inputIds = 0;\nInput.style = WcsInputStyle0;\nexport { Input as wcs_input };\n\n"],
  "mappings": "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",
  "names": []
}

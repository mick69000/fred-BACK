{
  "version": 3,
  "sources": ["../../../../../../node_modules/wcs-core/dist/esm/wcs-textarea.entry.js"],
  "sourcesContent": ["import { r as registerInstance, c as createEvent, a as readTask, h, H as Host, g as getElement } from './index-d9de61ce.js';\nimport { r as debounceEvent, i as inheritAriaAttributes, a as inheritAttributes, y as raf, s as setOrRemoveAttribute } from './helpers-ece6a2d3.js';\nconst textareaCss = \":host{--wcs-textarea-text-color-disabled:var(--wcs-semantic-color-text-disabled);--wcs-textarea-value-color:var(--wcs-semantic-color-text-primary);--wcs-textarea-value-font-weight:var(--wcs-semantic-font-weight-medium);--wcs-textarea-placeholder-color:var(--wcs-semantic-color-text-tertiary);--wcs-textarea-placeholder-font-weight:var(--wcs-semantic-font-weight-roman);--wcs-textarea-placeholder-font-style:var(--wcs-semantic-font-style-control-placeholder);--wcs-textarea-icon-color-default:var(--wcs-semantic-color-foreground-brand);--wcs-textarea-icon-color-disabled:var(--wcs-semantic-color-foreground-disabled);--wcs-textarea-icon-color-focus:var(--wcs-semantic-color-foreground-brand);--wcs-textarea-border-color-default:var(--wcs-semantic-color-border-primary);--wcs-textarea-border-color-disabled:var(--wcs-semantic-color-border-disabled);--wcs-textarea-border-color-error:var(--wcs-semantic-color-border-critical);--wcs-textarea-border-color-focus:var(--wcs-semantic-color-border-control-focus);--wcs-textarea-border-style-default:solid;--wcs-textarea-border-style-error:solid;--wcs-textarea-border-style-focus:var(--wcs-semantic-border-style-focus-control);--wcs-internal-textarea-border-radius-left:var(--wcs-textarea-border-radius-left, var(--wcs-semantic-border-radius-base));--wcs-internal-textarea-border-radius-right:var(--wcs-textarea-border-radius-right, var(--wcs-semantic-border-radius-base));--wcs-textarea-border-width:var(--wcs-semantic-border-width-default);--wcs-textarea-border-width-focus:var(--wcs-semantic-border-width-large);--wcs-textarea-gap:var(--wcs-semantic-spacing-base);--wcs-textarea-padding-top:var(--wcs-semantic-spacing-base);--wcs-textarea-padding-bottom:var(--wcs-semantic-spacing-base);--wcs-internal-textarea-padding-left:var(--wcs-textarea-padding-left, var(--wcs-semantic-spacing-large));--wcs-internal-textarea-padding-right:var(--wcs-textarea-padding-right, var(--wcs-semantic-spacing-large));--wcs-textarea-min-height:var(--wcs-semantic-size-m);--wcs-internal-textarea-max-height:var(--wcs-textarea-max-height, unset);--wcs-textarea-background-color:var(--wcs-semantic-color-background-control-default);display:flex;flex-direction:row;align-items:center;gap:var(--wcs-textarea-gap);width:100%;border-radius:var(--wcs-internal-textarea-border-radius-left) var(--wcs-internal-textarea-border-radius-right) var(--wcs-internal-textarea-border-radius-right) var(--wcs-internal-textarea-border-radius-left);background-color:var(--wcs-textarea-background-color);outline:var(--wcs-textarea-border-style-default) var(--wcs-textarea-border-width) var(--wcs-textarea-border-color-default);outline-offset:calc(-1 * var(--wcs-textarea-border-width));background-clip:padding-box;box-sizing:border-box}:host textarea{box-sizing:border-box;font-family:inherit;overflow:auto;flex:1;width:100%;min-height:var(--wcs-textarea-min-height);max-height:var(--wcs-internal-textarea-max-height);background-color:transparent;color:var(--wcs-textarea-value-color);font-weight:var(--wcs-textarea-value-font-weight) !important;border:none;padding-top:var(--wcs-textarea-padding-top);padding-bottom:var(--wcs-textarea-padding-bottom);padding-left:var(--wcs-internal-textarea-padding-left);padding-right:var(--wcs-internal-textarea-padding-right);font-size:1rem;line-height:1.5}:host textarea::placeholder{color:var(--wcs-textarea-placeholder-color);opacity:1;font-weight:var(--wcs-textarea-placeholder-font-weight);font-style:var(--wcs-textarea-placeholder-font-style)}:host textarea:focus{box-shadow:none;outline:0}:host wcs-mat-icon{margin-left:var(--wcs-internal-textarea-padding-left);color:var(--wcs-textarea-icon-color-default)}:host([disabled]){--wcs-textarea-background-color:var(--wcs-semantic-color-background-control-disabled);outline:var(--wcs-textarea-border-style-default) var(--wcs-textarea-border-width) var(--wcs-textarea-border-color-disabled)}:host([disabled]) textarea{color:var(--wcs-textarea-text-color-disabled);cursor:not-allowed}:host([disabled]) textarea::placeholder{color:var(--wcs-textarea-text-color-disabled)}:host([disabled]) wcs-mat-icon{color:var(--wcs-textarea-icon-color-disabled)}:host([icon]) textarea{padding-left:0}:host([state=error]){outline-color:var(--wcs-textarea-border-color-error) !important}:host(:focus-within){outline:var(--wcs-textarea-border-style-focus) var(--wcs-textarea-border-width-focus) var(--wcs-textarea-border-color-focus);outline-offset:calc(var(--wcs-textarea-border-width-focus) * -1)}:host(:focus-within) wcs-mat-icon{color:var(--wcs-textarea-icon-color-focus)}\";\nconst WcsTextareaStyle0 = textareaCss;\nconst TEXTAREA_INHERITED_ATTRS = ['tabindex', 'title'];\nconst Textarea = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.wcsChange = createEvent(this, \"wcsChange\", 7);\n    this.wcsInput = createEvent(this, \"wcsInput\", 7);\n    this.wcsBlur = createEvent(this, \"wcsBlur\", 7);\n    this.wcsFocus = createEvent(this, \"wcsFocus\", 7);\n    this.inputId = `wcs-textarea-${textareaIds++}`;\n    this.inheritedAttributes = {};\n    this.onInput = ev => {\n      if (this.nativeInput) {\n        this.value = this.nativeInput.value;\n      }\n      this.wcsInput.emit(ev);\n    };\n    this.onChange = _ => {\n      this.wcsChange.emit({\n        value: this.nativeInput.value\n      });\n    };\n    this.onFocus = ev => {\n      if (this.fireFocusEvents) {\n        this.wcsFocus.emit(ev);\n      }\n    };\n    this.onBlur = ev => {\n      if (this.fireFocusEvents) {\n        this.wcsBlur.emit(ev);\n      }\n    };\n    this.fireFocusEvents = true;\n    this.autocapitalize = 'none';\n    this.autofocus = false;\n    this.debounce = 0;\n    this.disabled = false;\n    this.icon = undefined;\n    this.inputmode = undefined;\n    this.enterkeyhint = undefined;\n    this.maxlength = undefined;\n    this.minlength = undefined;\n    this.name = this.inputId;\n    this.placeholder = undefined;\n    this.readonly = false;\n    this.required = false;\n    this.spellcheck = false;\n    this.state = 'initial';\n    this.cols = undefined;\n    this.rows = undefined;\n    this.wrap = undefined;\n    this.autoGrow = false;\n    this.value = '';\n    this.resize = undefined;\n  }\n  debounceChanged() {\n    this.wcsInput = debounceEvent(this.wcsInput, this.debounce);\n  }\n  /**\n   * Update the native input element when the value changes\n   */\n  valueChanged() {\n    const nativeInput = this.nativeInput;\n    const value = this.getValue();\n    if (nativeInput && nativeInput.value !== value) {\n      nativeInput.value = value;\n    }\n    this.runAutoGrow();\n  }\n  connectedCallback() {\n    this.debounceChanged();\n    {\n      document.dispatchEvent(new CustomEvent('wcsInputDidLoad', {\n        detail: this.el\n      }));\n    }\n  }\n  disconnectedCallback() {\n    {\n      document.dispatchEvent(new CustomEvent('wcsInputDidUnload', {\n        detail: this.el\n      }));\n    }\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = Object.assign(Object.assign({}, inheritAriaAttributes(this.el)), inheritAttributes(this.el, TEXTAREA_INHERITED_ATTRS));\n  }\n  componentDidLoad() {\n    raf(() => this.runAutoGrow());\n  }\n  runAutoGrow() {\n    const nativeInput = this.nativeInput;\n    if (nativeInput && this.autoGrow) {\n      readTask(() => {\n        nativeInput.style.height = 'auto';\n        nativeInput.style.height = nativeInput.scrollHeight + 'px';\n      });\n    }\n  }\n  async setAriaAttribute(attr, value) {\n    setOrRemoveAttribute(this.nativeInput, attr, value);\n  }\n  /**\n   * This method make the textarea automatically adopt the size of the content without a scroll bar\n   */\n  async fitContent() {\n    raf(() => this.runAutoGrow());\n  }\n  /**\n   * Sets blur on the native `textarea` in `wcs-textarea`. Use this method instead of the global\n   * `textarea.blur()`.\n   * @internal\n   */\n  async setBlur() {\n    if (this.nativeInput) {\n      this.nativeInput.blur();\n    }\n  }\n  /**\n   * Returns the native `<textarea>` element used under the hood.\n   */\n  getInputElement() {\n    // tslint:disable-next-line:no-non-null-assertion\n    return Promise.resolve(this.nativeInput);\n  }\n  getValue() {\n    return this.value || '';\n  }\n  render() {\n    const value = this.getValue();\n    const style = Object.assign({}, this.resize && {\n      'resize': this.resize\n    });\n    return h(Host, {\n      key: 'd2f0cea260f9745f49f4aa259004b704af492c33',\n      \"aria-disabled\": this.disabled ? 'true' : null\n    }, this.icon ? h(\"wcs-mat-icon\", {\n      icon: this.icon,\n      size: \"m\"\n    }) : null, h(\"textarea\", Object.assign({\n      key: 'a5c87bbb2888132fd62f26df0f36e5d4e003ad84',\n      class: \"native-textarea\",\n      ref: el => this.nativeInput = el,\n      autoCapitalize: this.autocapitalize,\n      autoFocus: this.autofocus,\n      enterKeyHint: this.enterkeyhint,\n      inputMode: this.inputmode,\n      disabled: this.disabled,\n      maxLength: this.maxlength,\n      minLength: this.minlength,\n      name: this.name,\n      placeholder: this.placeholder || '',\n      readOnly: this.readonly,\n      required: this.required,\n      spellcheck: this.spellcheck,\n      cols: this.cols,\n      rows: this.rows,\n      wrap: this.wrap,\n      onInput: this.onInput,\n      onChange: this.onChange,\n      onBlur: this.onBlur,\n      onFocus: this.onFocus,\n      style: style\n    }, this.inheritedAttributes), value));\n  }\n  static get delegatesFocus() {\n    return true;\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"debounce\": [\"debounceChanged\"],\n      \"value\": [\"valueChanged\"]\n    };\n  }\n};\nlet textareaIds = 0;\nTextarea.style = WcsTextareaStyle0;\nexport { Textarea as wcs_textarea };\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAEA,IAAM,cAAc;AACpB,IAAM,oBAAoB;AAC1B,IAAM,2BAA2B,CAAC,YAAY,OAAO;AACrD,IAAM,WAAW,MAAM;AAAA,EACrB,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,YAAY,YAAY,MAAM,aAAa,CAAC;AACjD,SAAK,WAAW,YAAY,MAAM,YAAY,CAAC;AAC/C,SAAK,UAAU,YAAY,MAAM,WAAW,CAAC;AAC7C,SAAK,WAAW,YAAY,MAAM,YAAY,CAAC;AAC/C,SAAK,UAAU,gBAAgB,aAAa;AAC5C,SAAK,sBAAsB,CAAC;AAC5B,SAAK,UAAU,QAAM;AACnB,UAAI,KAAK,aAAa;AACpB,aAAK,QAAQ,KAAK,YAAY;AAAA,MAChC;AACA,WAAK,SAAS,KAAK,EAAE;AAAA,IACvB;AACA,SAAK,WAAW,OAAK;AACnB,WAAK,UAAU,KAAK;AAAA,QAClB,OAAO,KAAK,YAAY;AAAA,MAC1B,CAAC;AAAA,IACH;AACA,SAAK,UAAU,QAAM;AACnB,UAAI,KAAK,iBAAiB;AACxB,aAAK,SAAS,KAAK,EAAE;AAAA,MACvB;AAAA,IACF;AACA,SAAK,SAAS,QAAM;AAClB,UAAI,KAAK,iBAAiB;AACxB,aAAK,QAAQ,KAAK,EAAE;AAAA,MACtB;AAAA,IACF;AACA,SAAK,kBAAkB;AACvB,SAAK,iBAAiB;AACtB,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,SAAK,WAAW;AAChB,SAAK,OAAO;AACZ,SAAK,YAAY;AACjB,SAAK,eAAe;AACpB,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,SAAK,OAAO,KAAK;AACjB,SAAK,cAAc;AACnB,SAAK,WAAW;AAChB,SAAK,WAAW;AAChB,SAAK,aAAa;AAClB,SAAK,QAAQ;AACb,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,WAAW;AAChB,SAAK,QAAQ;AACb,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,kBAAkB;AAChB,SAAK,WAAW,cAAc,KAAK,UAAU,KAAK,QAAQ;AAAA,EAC5D;AAAA;AAAA;AAAA;AAAA,EAIA,eAAe;AACb,UAAM,cAAc,KAAK;AACzB,UAAM,QAAQ,KAAK,SAAS;AAC5B,QAAI,eAAe,YAAY,UAAU,OAAO;AAC9C,kBAAY,QAAQ;AAAA,IACtB;AACA,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,oBAAoB;AAClB,SAAK,gBAAgB;AACrB;AACE,eAAS,cAAc,IAAI,YAAY,mBAAmB;AAAA,QACxD,QAAQ,KAAK;AAAA,MACf,CAAC,CAAC;AAAA,IACJ;AAAA,EACF;AAAA,EACA,uBAAuB;AACrB;AACE,eAAS,cAAc,IAAI,YAAY,qBAAqB;AAAA,QAC1D,QAAQ,KAAK;AAAA,MACf,CAAC,CAAC;AAAA,IACJ;AAAA,EACF;AAAA,EACA,oBAAoB;AAClB,SAAK,sBAAsB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,sBAAsB,KAAK,EAAE,CAAC,GAAG,kBAAkB,KAAK,IAAI,wBAAwB,CAAC;AAAA,EAClJ;AAAA,EACA,mBAAmB;AACjB,QAAI,MAAM,KAAK,YAAY,CAAC;AAAA,EAC9B;AAAA,EACA,cAAc;AACZ,UAAM,cAAc,KAAK;AACzB,QAAI,eAAe,KAAK,UAAU;AAChC,eAAS,MAAM;AACb,oBAAY,MAAM,SAAS;AAC3B,oBAAY,MAAM,SAAS,YAAY,eAAe;AAAA,MACxD,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACM,iBAAiB,MAAM,OAAO;AAAA;AAClC,2BAAqB,KAAK,aAAa,MAAM,KAAK;AAAA,IACpD;AAAA;AAAA;AAAA;AAAA;AAAA,EAIM,aAAa;AAAA;AACjB,UAAI,MAAM,KAAK,YAAY,CAAC;AAAA,IAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMM,UAAU;AAAA;AACd,UAAI,KAAK,aAAa;AACpB,aAAK,YAAY,KAAK;AAAA,MACxB;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAIA,kBAAkB;AAEhB,WAAO,QAAQ,QAAQ,KAAK,WAAW;AAAA,EACzC;AAAA,EACA,WAAW;AACT,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA,EACA,SAAS;AACP,UAAM,QAAQ,KAAK,SAAS;AAC5B,UAAM,QAAQ,OAAO,OAAO,CAAC,GAAG,KAAK,UAAU;AAAA,MAC7C,UAAU,KAAK;AAAA,IACjB,CAAC;AACD,WAAO,EAAE,MAAM;AAAA,MACb,KAAK;AAAA,MACL,iBAAiB,KAAK,WAAW,SAAS;AAAA,IAC5C,GAAG,KAAK,OAAO,EAAE,gBAAgB;AAAA,MAC/B,MAAM,KAAK;AAAA,MACX,MAAM;AAAA,IACR,CAAC,IAAI,MAAM,EAAE,YAAY,OAAO,OAAO;AAAA,MACrC,KAAK;AAAA,MACL,OAAO;AAAA,MACP,KAAK,QAAM,KAAK,cAAc;AAAA,MAC9B,gBAAgB,KAAK;AAAA,MACrB,WAAW,KAAK;AAAA,MAChB,cAAc,KAAK;AAAA,MACnB,WAAW,KAAK;AAAA,MAChB,UAAU,KAAK;AAAA,MACf,WAAW,KAAK;AAAA,MAChB,WAAW,KAAK;AAAA,MAChB,MAAM,KAAK;AAAA,MACX,aAAa,KAAK,eAAe;AAAA,MACjC,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,MACf,YAAY,KAAK;AAAA,MACjB,MAAM,KAAK;AAAA,MACX,MAAM,KAAK;AAAA,MACX,MAAM,KAAK;AAAA,MACX,SAAS,KAAK;AAAA,MACd,UAAU,KAAK;AAAA,MACf,QAAQ,KAAK;AAAA,MACb,SAAS,KAAK;AAAA,MACd;AAAA,IACF,GAAG,KAAK,mBAAmB,GAAG,KAAK,CAAC;AAAA,EACtC;AAAA,EACA,WAAW,iBAAiB;AAC1B,WAAO;AAAA,EACT;AAAA,EACA,IAAI,KAAK;AACP,WAAO,WAAW,IAAI;AAAA,EACxB;AAAA,EACA,WAAW,WAAW;AACpB,WAAO;AAAA,MACL,YAAY,CAAC,iBAAiB;AAAA,MAC9B,SAAS,CAAC,cAAc;AAAA,IAC1B;AAAA,EACF;AACF;AACA,IAAI,cAAc;AAClB,SAAS,QAAQ;",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../../../../node_modules/wcs-core/dist/esm/com-nav-utils-ee7bf77c.js"],
  "sourcesContent": ["import { g as getCssRootPropertyValue } from './helpers-ece6a2d3.js';\n\n/**\n * This function add event handlers on the navigableItems list. The handlers call the function close() on the nodeName.\n *\n * T: type class of the nodeNameToClose param (must have a close function)\n *\n * @param navigableItems items on which focusout event listeners must be added\n * @param nodeNameToClose nodeName of the element we want to close in the event path\n */\nfunction registerCloseHandlerForFocusOutEventOn(navigableItems, nodeNameToClose) {\n  navigableItems.forEach(navigableItem => {\n    navigableItem.addEventListener(\"focusout\", evt => {\n      const relatedTargetElement = evt.relatedTarget;\n      if (!isElementChildOfNavigableItem(navigableItem, relatedTargetElement)) {\n        const eventComposedPath = evt.composedPath();\n        if (isEventThrownFromChildOfNodeNameToClose(eventComposedPath, nodeNameToClose)) {\n          eventComposedPath.filter(eventTargetNodeNameEquals(nodeNameToClose))[0].close();\n        }\n      }\n    });\n  });\n}\nfunction isElementChildOfNavigableItem(navigableItem, element) {\n  return navigableItem.contains(element);\n}\nfunction eventTargetNodeNameEquals(nodeName) {\n  return x => x.nodeName === nodeName;\n}\nfunction isEventThrownFromChildOfNodeNameToClose(eventComposedPath, nodeName) {\n  return eventComposedPath.map(x => x.nodeName).indexOf(nodeName) !== -1;\n}\nfunction comNavDidLoadWithResizeObserver(comNavElement) {\n  const smallBreakpoint = getCssRootPropertyValue('--wcs-phone-breakpoint-max-width') || '575px';\n  const smallBreakpointValue = parseInt(smallBreakpoint, 10);\n  return new ResizeObserver(entry => {\n    const cr = entry[0].contentRect;\n    const paddingRight = cr.right - cr.width;\n    const paddingLeft = cr.left;\n    if (cr.width <= smallBreakpointValue - (paddingLeft + paddingRight)) {\n      comNavElement.currentActiveSizing = 'mobile';\n    } else {\n      comNavElement.currentActiveSizing = 'desktop';\n    }\n  });\n}\nexport { comNavDidLoadWithResizeObserver as c, registerCloseHandlerForFocusOutEventOn as r };\n\n"],
  "mappings": ";;;;;AAUA,SAAS,uCAAuC,gBAAgB,iBAAiB;AAC/E,iBAAe,QAAQ,mBAAiB;AACtC,kBAAc,iBAAiB,YAAY,SAAO;AAChD,YAAM,uBAAuB,IAAI;AACjC,UAAI,CAAC,8BAA8B,eAAe,oBAAoB,GAAG;AACvE,cAAM,oBAAoB,IAAI,aAAa;AAC3C,YAAI,wCAAwC,mBAAmB,eAAe,GAAG;AAC/E,4BAAkB,OAAO,0BAA0B,eAAe,CAAC,EAAE,CAAC,EAAE,MAAM;AAAA,QAChF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACH;AACA,SAAS,8BAA8B,eAAe,SAAS;AAC7D,SAAO,cAAc,SAAS,OAAO;AACvC;AACA,SAAS,0BAA0B,UAAU;AAC3C,SAAO,OAAK,EAAE,aAAa;AAC7B;AACA,SAAS,wCAAwC,mBAAmB,UAAU;AAC5E,SAAO,kBAAkB,IAAI,OAAK,EAAE,QAAQ,EAAE,QAAQ,QAAQ,MAAM;AACtE;AACA,SAAS,gCAAgC,eAAe;AACtD,QAAM,kBAAkB,wBAAwB,kCAAkC,KAAK;AACvF,QAAM,uBAAuB,SAAS,iBAAiB,EAAE;AACzD,SAAO,IAAI,eAAe,WAAS;AACjC,UAAM,KAAK,MAAM,CAAC,EAAE;AACpB,UAAM,eAAe,GAAG,QAAQ,GAAG;AACnC,UAAM,cAAc,GAAG;AACvB,QAAI,GAAG,SAAS,wBAAwB,cAAc,eAAe;AACnE,oBAAc,sBAAsB;AAAA,IACtC,OAAO;AACL,oBAAc,sBAAsB;AAAA,IACtC;AAAA,EACF,CAAC;AACH;",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../../../../node_modules/reflect-metadata/Reflect.js"],
  "sourcesContent": ["/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n  // Metadata Proposal\n  // https://rbuckton.github.io/reflect-metadata/\n  (function (factory) {\n    var root = typeof globalThis === \"object\" ? globalThis : typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : sloppyModeThis();\n    var exporter = makeExporter(Reflect);\n    if (typeof root.Reflect !== \"undefined\") {\n      exporter = makeExporter(root.Reflect, exporter);\n    }\n    factory(exporter, root);\n    if (typeof root.Reflect === \"undefined\") {\n      root.Reflect = Reflect;\n    }\n    function makeExporter(target, previous) {\n      return function (key, value) {\n        Object.defineProperty(target, key, {\n          configurable: true,\n          writable: true,\n          value: value\n        });\n        if (previous) previous(key, value);\n      };\n    }\n    function functionThis() {\n      try {\n        return Function(\"return this;\")();\n      } catch (_) {}\n    }\n    function indirectEvalThis() {\n      try {\n        return (void 0, eval)(\"(function() { return this; })()\");\n      } catch (_) {}\n    }\n    function sloppyModeThis() {\n      return functionThis() || indirectEvalThis();\n    }\n  })(function (exporter, root) {\n    var hasOwn = Object.prototype.hasOwnProperty;\n    // feature test for Symbol support\n    var supportsSymbol = typeof Symbol === \"function\";\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n    var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n    var supportsProto = {\n      __proto__: []\n    } instanceof Array; // feature test for __proto__ support\n    var downLevel = !supportsCreate && !supportsProto;\n    var HashMap = {\n      // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n      create: supportsCreate ? function () {\n        return MakeDictionary(Object.create(null));\n      } : supportsProto ? function () {\n        return MakeDictionary({\n          __proto__: null\n        });\n      } : function () {\n        return MakeDictionary({});\n      },\n      has: downLevel ? function (map, key) {\n        return hasOwn.call(map, key);\n      } : function (map, key) {\n        return key in map;\n      },\n      get: downLevel ? function (map, key) {\n        return hasOwn.call(map, key) ? map[key] : undefined;\n      } : function (map, key) {\n        return map[key];\n      }\n    };\n    // Load global or shim versions of Map, Set, and WeakMap\n    var functionPrototype = Object.getPrototypeOf(Function);\n    var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n    var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n    var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n    var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n    var metadataRegistry = GetOrCreateMetadataRegistry();\n    var metadataProvider = CreateMetadataProvider(metadataRegistry);\n    /**\n     * Applies a set of decorators to a property of a target object.\n     * @param decorators An array of decorators.\n     * @param target The target object.\n     * @param propertyKey (Optional) The property key to decorate.\n     * @param attributes (Optional) The property descriptor for the target key.\n     * @remarks Decorators are applied in reverse order.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     Example = Reflect.decorate(decoratorsArray, Example);\n     *\n     *     // property (on constructor)\n     *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     Object.defineProperty(Example, \"staticMethod\",\n     *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n     *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n     *\n     *     // method (on prototype)\n     *     Object.defineProperty(Example.prototype, \"method\",\n     *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n     *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n     *\n     */\n    function decorate(decorators, target, propertyKey, attributes) {\n      if (!IsUndefined(propertyKey)) {\n        if (!IsArray(decorators)) throw new TypeError();\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes)) throw new TypeError();\n        if (IsNull(attributes)) attributes = undefined;\n        propertyKey = ToPropertyKey(propertyKey);\n        return DecorateProperty(decorators, target, propertyKey, attributes);\n      } else {\n        if (!IsArray(decorators)) throw new TypeError();\n        if (!IsConstructor(target)) throw new TypeError();\n        return DecorateConstructor(decorators, target);\n      }\n    }\n    exporter(\"decorate\", decorate);\n    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n    /**\n     * A default metadata decorator factory that can be used on a class, class member, or parameter.\n     * @param metadataKey The key for the metadata entry.\n     * @param metadataValue The value for the metadata entry.\n     * @returns A decorator function.\n     * @remarks\n     * If `metadataKey` is already defined for the target and target key, the\n     * metadataValue for that key will be overwritten.\n     * @example\n     *\n     *     // constructor\n     *     @Reflect.metadata(key, value)\n     *     class Example {\n     *     }\n     *\n     *     // property (on constructor, TypeScript only)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         static staticProperty;\n     *     }\n     *\n     *     // property (on prototype, TypeScript only)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         property;\n     *     }\n     *\n     *     // method (on constructor)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         static staticMethod() { }\n     *     }\n     *\n     *     // method (on prototype)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         method() { }\n     *     }\n     *\n     */\n    function metadata(metadataKey, metadataValue) {\n      function decorator(target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey)) throw new TypeError();\n        OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n      }\n      return decorator;\n    }\n    exporter(\"metadata\", metadata);\n    /**\n     * Define a unique metadata entry on the target.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param metadataValue A value that contains attached metadata.\n     * @param target The target object on which to define metadata.\n     * @param propertyKey (Optional) The property key for the target.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n     *\n     *     // property (on constructor)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n     *\n     *     // decorator factory as metadata-producing annotation.\n     *     function MyAnnotation(options): Decorator {\n     *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n     *     }\n     *\n     */\n    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n    }\n    exporter(\"defineMetadata\", defineMetadata);\n    /**\n     * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n    function hasMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n    }\n    exporter(\"hasMetadata\", hasMetadata);\n    /**\n     * Gets a value indicating whether the target object has the provided metadata key defined.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n    function hasOwnMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n    }\n    exporter(\"hasOwnMetadata\", hasOwnMetadata);\n    /**\n     * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n    function getMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n    }\n    exporter(\"getMetadata\", getMetadata);\n    /**\n     * Gets the metadata value for the provided metadata key on the target object.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n    function getOwnMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n    }\n    exporter(\"getOwnMetadata\", getOwnMetadata);\n    /**\n     * Gets the metadata keys defined on the target object or its prototype chain.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns An array of unique metadata keys.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getMetadataKeys(Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n     *\n     */\n    function getMetadataKeys(target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryMetadataKeys(target, propertyKey);\n    }\n    exporter(\"getMetadataKeys\", getMetadataKeys);\n    /**\n     * Gets the unique metadata keys defined on the target object.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns An array of unique metadata keys.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getOwnMetadataKeys(Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n     *\n     */\n    function getOwnMetadataKeys(target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryOwnMetadataKeys(target, propertyKey);\n    }\n    exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n    /**\n     * Deletes the metadata entry from the target object with the provided key.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n    function deleteMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      var provider = GetMetadataProvider(target, propertyKey, /*Create*/false);\n      if (IsUndefined(provider)) return false;\n      return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n    }\n    exporter(\"deleteMetadata\", deleteMetadata);\n    function DecorateConstructor(decorators, target) {\n      for (var i = decorators.length - 1; i >= 0; --i) {\n        var decorator = decorators[i];\n        var decorated = decorator(target);\n        if (!IsUndefined(decorated) && !IsNull(decorated)) {\n          if (!IsConstructor(decorated)) throw new TypeError();\n          target = decorated;\n        }\n      }\n      return target;\n    }\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\n      for (var i = decorators.length - 1; i >= 0; --i) {\n        var decorator = decorators[i];\n        var decorated = decorator(target, propertyKey, descriptor);\n        if (!IsUndefined(decorated) && !IsNull(decorated)) {\n          if (!IsObject(decorated)) throw new TypeError();\n          descriptor = decorated;\n        }\n      }\n      return descriptor;\n    }\n    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\n      var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n      if (hasOwn) return true;\n      var parent = OrdinaryGetPrototypeOf(O);\n      if (!IsNull(parent)) return OrdinaryHasMetadata(MetadataKey, parent, P);\n      return false;\n    }\n    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n      var provider = GetMetadataProvider(O, P, /*Create*/false);\n      if (IsUndefined(provider)) return false;\n      return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n    }\n    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\n      var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n      if (hasOwn) return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n      var parent = OrdinaryGetPrototypeOf(O);\n      if (!IsNull(parent)) return OrdinaryGetMetadata(MetadataKey, parent, P);\n      return undefined;\n    }\n    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n      var provider = GetMetadataProvider(O, P, /*Create*/false);\n      if (IsUndefined(provider)) return;\n      return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n    }\n    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n      var provider = GetMetadataProvider(O, P, /*Create*/true);\n      provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n    }\n    // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n    function OrdinaryMetadataKeys(O, P) {\n      var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n      var parent = OrdinaryGetPrototypeOf(O);\n      if (parent === null) return ownKeys;\n      var parentKeys = OrdinaryMetadataKeys(parent, P);\n      if (parentKeys.length <= 0) return ownKeys;\n      if (ownKeys.length <= 0) return parentKeys;\n      var set = new _Set();\n      var keys = [];\n      for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n        var key = ownKeys_1[_i];\n        var hasKey = set.has(key);\n        if (!hasKey) {\n          set.add(key);\n          keys.push(key);\n        }\n      }\n      for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n        var key = parentKeys_1[_a];\n        var hasKey = set.has(key);\n        if (!hasKey) {\n          set.add(key);\n          keys.push(key);\n        }\n      }\n      return keys;\n    }\n    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n    function OrdinaryOwnMetadataKeys(O, P) {\n      var provider = GetMetadataProvider(O, P, /*create*/false);\n      if (!provider) {\n        return [];\n      }\n      return provider.OrdinaryOwnMetadataKeys(O, P);\n    }\n    // 6 ECMAScript Data Types and Values\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n    function Type(x) {\n      if (x === null) return 1 /* Null */;\n      switch (typeof x) {\n        case \"undefined\":\n          return 0 /* Undefined */;\n        case \"boolean\":\n          return 2 /* Boolean */;\n        case \"string\":\n          return 3 /* String */;\n        case \"symbol\":\n          return 4 /* Symbol */;\n        case \"number\":\n          return 5 /* Number */;\n        case \"object\":\n          return x === null ? 1 /* Null */ : 6 /* Object */;\n        default:\n          return 6 /* Object */;\n      }\n    }\n    // 6.1.1 The Undefined Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n    function IsUndefined(x) {\n      return x === undefined;\n    }\n    // 6.1.2 The Null Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n    function IsNull(x) {\n      return x === null;\n    }\n    // 6.1.5 The Symbol Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n    function IsSymbol(x) {\n      return typeof x === \"symbol\";\n    }\n    // 6.1.7 The Object Type\n    // https://tc39.github.io/ecma262/#sec-object-type\n    function IsObject(x) {\n      return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n    }\n    // 7.1 Type Conversion\n    // https://tc39.github.io/ecma262/#sec-type-conversion\n    // 7.1.1 ToPrimitive(input [, PreferredType])\n    // https://tc39.github.io/ecma262/#sec-toprimitive\n    function ToPrimitive(input, PreferredType) {\n      switch (Type(input)) {\n        case 0 /* Undefined */:\n          return input;\n        case 1 /* Null */:\n          return input;\n        case 2 /* Boolean */:\n          return input;\n        case 3 /* String */:\n          return input;\n        case 4 /* Symbol */:\n          return input;\n        case 5 /* Number */:\n          return input;\n      }\n      var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n      var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n      if (exoticToPrim !== undefined) {\n        var result = exoticToPrim.call(input, hint);\n        if (IsObject(result)) throw new TypeError();\n        return result;\n      }\n      return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n    }\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n    function OrdinaryToPrimitive(O, hint) {\n      if (hint === \"string\") {\n        var toString_1 = O.toString;\n        if (IsCallable(toString_1)) {\n          var result = toString_1.call(O);\n          if (!IsObject(result)) return result;\n        }\n        var valueOf = O.valueOf;\n        if (IsCallable(valueOf)) {\n          var result = valueOf.call(O);\n          if (!IsObject(result)) return result;\n        }\n      } else {\n        var valueOf = O.valueOf;\n        if (IsCallable(valueOf)) {\n          var result = valueOf.call(O);\n          if (!IsObject(result)) return result;\n        }\n        var toString_2 = O.toString;\n        if (IsCallable(toString_2)) {\n          var result = toString_2.call(O);\n          if (!IsObject(result)) return result;\n        }\n      }\n      throw new TypeError();\n    }\n    // 7.1.2 ToBoolean(argument)\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\n    function ToBoolean(argument) {\n      return !!argument;\n    }\n    // 7.1.12 ToString(argument)\n    // https://tc39.github.io/ecma262/#sec-tostring\n    function ToString(argument) {\n      return \"\" + argument;\n    }\n    // 7.1.14 ToPropertyKey(argument)\n    // https://tc39.github.io/ecma262/#sec-topropertykey\n    function ToPropertyKey(argument) {\n      var key = ToPrimitive(argument, 3 /* String */);\n      if (IsSymbol(key)) return key;\n      return ToString(key);\n    }\n    // 7.2 Testing and Comparison Operations\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n    // 7.2.2 IsArray(argument)\n    // https://tc39.github.io/ecma262/#sec-isarray\n    function IsArray(argument) {\n      return Array.isArray ? Array.isArray(argument) : argument instanceof Object ? argument instanceof Array : Object.prototype.toString.call(argument) === \"[object Array]\";\n    }\n    // 7.2.3 IsCallable(argument)\n    // https://tc39.github.io/ecma262/#sec-iscallable\n    function IsCallable(argument) {\n      // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n      return typeof argument === \"function\";\n    }\n    // 7.2.4 IsConstructor(argument)\n    // https://tc39.github.io/ecma262/#sec-isconstructor\n    function IsConstructor(argument) {\n      // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n      return typeof argument === \"function\";\n    }\n    // 7.2.7 IsPropertyKey(argument)\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\n    function IsPropertyKey(argument) {\n      switch (Type(argument)) {\n        case 3 /* String */:\n          return true;\n        case 4 /* Symbol */:\n          return true;\n        default:\n          return false;\n      }\n    }\n    function SameValueZero(x, y) {\n      return x === y || x !== x && y !== y;\n    }\n    // 7.3 Operations on Objects\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\n    // 7.3.9 GetMethod(V, P)\n    // https://tc39.github.io/ecma262/#sec-getmethod\n    function GetMethod(V, P) {\n      var func = V[P];\n      if (func === undefined || func === null) return undefined;\n      if (!IsCallable(func)) throw new TypeError();\n      return func;\n    }\n    // 7.4 Operations on Iterator Objects\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n    function GetIterator(obj) {\n      var method = GetMethod(obj, iteratorSymbol);\n      if (!IsCallable(method)) throw new TypeError(); // from Call\n      var iterator = method.call(obj);\n      if (!IsObject(iterator)) throw new TypeError();\n      return iterator;\n    }\n    // 7.4.4 IteratorValue(iterResult)\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n    function IteratorValue(iterResult) {\n      return iterResult.value;\n    }\n    // 7.4.5 IteratorStep(iterator)\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\n    function IteratorStep(iterator) {\n      var result = iterator.next();\n      return result.done ? false : result;\n    }\n    // 7.4.6 IteratorClose(iterator, completion)\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\n    function IteratorClose(iterator) {\n      var f = iterator[\"return\"];\n      if (f) f.call(iterator);\n    }\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n    function OrdinaryGetPrototypeOf(O) {\n      var proto = Object.getPrototypeOf(O);\n      if (typeof O !== \"function\" || O === functionPrototype) return proto;\n      // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n      // Try to determine the superclass constructor. Compatible implementations\n      // must either set __proto__ on a subclass constructor to the superclass constructor,\n      // or ensure each class has a valid `constructor` property on its prototype that\n      // points back to the constructor.\n      // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n      // This is the case when in ES6 or when using __proto__ in a compatible browser.\n      if (proto !== functionPrototype) return proto;\n      // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n      var prototype = O.prototype;\n      var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n      if (prototypeProto == null || prototypeProto === Object.prototype) return proto;\n      // If the constructor was not a function, then we cannot determine the heritage.\n      var constructor = prototypeProto.constructor;\n      if (typeof constructor !== \"function\") return proto;\n      // If we have some kind of self-reference, then we cannot determine the heritage.\n      if (constructor === O) return proto;\n      // we have a pretty good guess at the heritage.\n      return constructor;\n    }\n    // Global metadata registry\n    // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n    // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n    /**\n     * Creates a registry used to allow multiple `reflect-metadata` providers.\n     */\n    function CreateMetadataRegistry() {\n      var fallback;\n      if (!IsUndefined(registrySymbol) && typeof root.Reflect !== \"undefined\" && !(registrySymbol in root.Reflect) && typeof root.Reflect.defineMetadata === \"function\") {\n        // interoperate with older version of `reflect-metadata` that did not support a registry.\n        fallback = CreateFallbackProvider(root.Reflect);\n      }\n      var first;\n      var second;\n      var rest;\n      var targetProviderMap = new _WeakMap();\n      var registry = {\n        registerProvider: registerProvider,\n        getProvider: getProvider,\n        setProvider: setProvider\n      };\n      return registry;\n      function registerProvider(provider) {\n        if (!Object.isExtensible(registry)) {\n          throw new Error(\"Cannot add provider to a frozen registry.\");\n        }\n        switch (true) {\n          case fallback === provider:\n            break;\n          case IsUndefined(first):\n            first = provider;\n            break;\n          case first === provider:\n            break;\n          case IsUndefined(second):\n            second = provider;\n            break;\n          case second === provider:\n            break;\n          default:\n            if (rest === undefined) rest = new _Set();\n            rest.add(provider);\n            break;\n        }\n      }\n      function getProviderNoCache(O, P) {\n        if (!IsUndefined(first)) {\n          if (first.isProviderFor(O, P)) return first;\n          if (!IsUndefined(second)) {\n            if (second.isProviderFor(O, P)) return first;\n            if (!IsUndefined(rest)) {\n              var iterator = GetIterator(rest);\n              while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                  return undefined;\n                }\n                var provider = IteratorValue(next);\n                if (provider.isProviderFor(O, P)) {\n                  IteratorClose(iterator);\n                  return provider;\n                }\n              }\n            }\n          }\n        }\n        if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n          return fallback;\n        }\n        return undefined;\n      }\n      function getProvider(O, P) {\n        var providerMap = targetProviderMap.get(O);\n        var provider;\n        if (!IsUndefined(providerMap)) {\n          provider = providerMap.get(P);\n        }\n        if (!IsUndefined(provider)) {\n          return provider;\n        }\n        provider = getProviderNoCache(O, P);\n        if (!IsUndefined(provider)) {\n          if (IsUndefined(providerMap)) {\n            providerMap = new _Map();\n            targetProviderMap.set(O, providerMap);\n          }\n          providerMap.set(P, provider);\n        }\n        return provider;\n      }\n      function hasProvider(provider) {\n        if (IsUndefined(provider)) throw new TypeError();\n        return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n      }\n      function setProvider(O, P, provider) {\n        if (!hasProvider(provider)) {\n          throw new Error(\"Metadata provider not registered.\");\n        }\n        var existingProvider = getProvider(O, P);\n        if (existingProvider !== provider) {\n          if (!IsUndefined(existingProvider)) {\n            return false;\n          }\n          var providerMap = targetProviderMap.get(O);\n          if (IsUndefined(providerMap)) {\n            providerMap = new _Map();\n            targetProviderMap.set(O, providerMap);\n          }\n          providerMap.set(P, provider);\n        }\n        return true;\n      }\n    }\n    /**\n     * Gets or creates the shared registry of metadata providers.\n     */\n    function GetOrCreateMetadataRegistry() {\n      var metadataRegistry;\n      if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n        metadataRegistry = root.Reflect[registrySymbol];\n      }\n      if (IsUndefined(metadataRegistry)) {\n        metadataRegistry = CreateMetadataRegistry();\n      }\n      if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n        Object.defineProperty(root.Reflect, registrySymbol, {\n          enumerable: false,\n          configurable: false,\n          writable: false,\n          value: metadataRegistry\n        });\n      }\n      return metadataRegistry;\n    }\n    function CreateMetadataProvider(registry) {\n      // [[Metadata]] internal slot\n      // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n      var metadata = new _WeakMap();\n      var provider = {\n        isProviderFor: function (O, P) {\n          var targetMetadata = metadata.get(O);\n          if (IsUndefined(targetMetadata)) return false;\n          return targetMetadata.has(P);\n        },\n        OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n        OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n        OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n        OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n        OrdinaryDeleteMetadata: OrdinaryDeleteMetadata\n      };\n      metadataRegistry.registerProvider(provider);\n      return provider;\n      function GetOrCreateMetadataMap(O, P, Create) {\n        var targetMetadata = metadata.get(O);\n        var createdTargetMetadata = false;\n        if (IsUndefined(targetMetadata)) {\n          if (!Create) return undefined;\n          targetMetadata = new _Map();\n          metadata.set(O, targetMetadata);\n          createdTargetMetadata = true;\n        }\n        var metadataMap = targetMetadata.get(P);\n        if (IsUndefined(metadataMap)) {\n          if (!Create) return undefined;\n          metadataMap = new _Map();\n          targetMetadata.set(P, metadataMap);\n          if (!registry.setProvider(O, P, provider)) {\n            targetMetadata.delete(P);\n            if (createdTargetMetadata) {\n              metadata.delete(O);\n            }\n            throw new Error(\"Wrong provider for target.\");\n          }\n        }\n        return metadataMap;\n      }\n      // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n      // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n      function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);\n        if (IsUndefined(metadataMap)) return false;\n        return ToBoolean(metadataMap.has(MetadataKey));\n      }\n      // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n      // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n      function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);\n        if (IsUndefined(metadataMap)) return undefined;\n        return metadataMap.get(MetadataKey);\n      }\n      // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n      // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n      function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/true);\n        metadataMap.set(MetadataKey, MetadataValue);\n      }\n      // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n      // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n      function OrdinaryOwnMetadataKeys(O, P) {\n        var keys = [];\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);\n        if (IsUndefined(metadataMap)) return keys;\n        var keysObj = metadataMap.keys();\n        var iterator = GetIterator(keysObj);\n        var k = 0;\n        while (true) {\n          var next = IteratorStep(iterator);\n          if (!next) {\n            keys.length = k;\n            return keys;\n          }\n          var nextValue = IteratorValue(next);\n          try {\n            keys[k] = nextValue;\n          } catch (e) {\n            try {\n              IteratorClose(iterator);\n            } finally {\n              throw e;\n            }\n          }\n          k++;\n        }\n      }\n      function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/false);\n        if (IsUndefined(metadataMap)) return false;\n        if (!metadataMap.delete(MetadataKey)) return false;\n        if (metadataMap.size === 0) {\n          var targetMetadata = metadata.get(O);\n          if (!IsUndefined(targetMetadata)) {\n            targetMetadata.delete(P);\n            if (targetMetadata.size === 0) {\n              metadata.delete(targetMetadata);\n            }\n          }\n        }\n        return true;\n      }\n    }\n    function CreateFallbackProvider(reflect) {\n      var defineMetadata = reflect.defineMetadata,\n        hasOwnMetadata = reflect.hasOwnMetadata,\n        getOwnMetadata = reflect.getOwnMetadata,\n        getOwnMetadataKeys = reflect.getOwnMetadataKeys,\n        deleteMetadata = reflect.deleteMetadata;\n      var metadataOwner = new _WeakMap();\n      var provider = {\n        isProviderFor: function (O, P) {\n          var metadataPropertySet = metadataOwner.get(O);\n          if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) {\n            return true;\n          }\n          if (getOwnMetadataKeys(O, P).length) {\n            if (IsUndefined(metadataPropertySet)) {\n              metadataPropertySet = new _Set();\n              metadataOwner.set(O, metadataPropertySet);\n            }\n            metadataPropertySet.add(P);\n            return true;\n          }\n          return false;\n        },\n        OrdinaryDefineOwnMetadata: defineMetadata,\n        OrdinaryHasOwnMetadata: hasOwnMetadata,\n        OrdinaryGetOwnMetadata: getOwnMetadata,\n        OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n        OrdinaryDeleteMetadata: deleteMetadata\n      };\n      return provider;\n    }\n    /**\n     * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n     * then this module's metadata provider is assigned to the object.\n     */\n    function GetMetadataProvider(O, P, Create) {\n      var registeredProvider = metadataRegistry.getProvider(O, P);\n      if (!IsUndefined(registeredProvider)) {\n        return registeredProvider;\n      }\n      if (Create) {\n        if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n          return metadataProvider;\n        }\n        throw new Error(\"Illegal state.\");\n      }\n      return undefined;\n    }\n    // naive Map shim\n    function CreateMapPolyfill() {\n      var cacheSentinel = {};\n      var arraySentinel = [];\n      var MapIterator = /** @class */function () {\n        function MapIterator(keys, values, selector) {\n          this._index = 0;\n          this._keys = keys;\n          this._values = values;\n          this._selector = selector;\n        }\n        MapIterator.prototype[\"@@iterator\"] = function () {\n          return this;\n        };\n        MapIterator.prototype[iteratorSymbol] = function () {\n          return this;\n        };\n        MapIterator.prototype.next = function () {\n          var index = this._index;\n          if (index >= 0 && index < this._keys.length) {\n            var result = this._selector(this._keys[index], this._values[index]);\n            if (index + 1 >= this._keys.length) {\n              this._index = -1;\n              this._keys = arraySentinel;\n              this._values = arraySentinel;\n            } else {\n              this._index++;\n            }\n            return {\n              value: result,\n              done: false\n            };\n          }\n          return {\n            value: undefined,\n            done: true\n          };\n        };\n        MapIterator.prototype.throw = function (error) {\n          if (this._index >= 0) {\n            this._index = -1;\n            this._keys = arraySentinel;\n            this._values = arraySentinel;\n          }\n          throw error;\n        };\n        MapIterator.prototype.return = function (value) {\n          if (this._index >= 0) {\n            this._index = -1;\n            this._keys = arraySentinel;\n            this._values = arraySentinel;\n          }\n          return {\n            value: value,\n            done: true\n          };\n        };\n        return MapIterator;\n      }();\n      var Map = /** @class */function () {\n        function Map() {\n          this._keys = [];\n          this._values = [];\n          this._cacheKey = cacheSentinel;\n          this._cacheIndex = -2;\n        }\n        Object.defineProperty(Map.prototype, \"size\", {\n          get: function () {\n            return this._keys.length;\n          },\n          enumerable: true,\n          configurable: true\n        });\n        Map.prototype.has = function (key) {\n          return this._find(key, /*insert*/false) >= 0;\n        };\n        Map.prototype.get = function (key) {\n          var index = this._find(key, /*insert*/false);\n          return index >= 0 ? this._values[index] : undefined;\n        };\n        Map.prototype.set = function (key, value) {\n          var index = this._find(key, /*insert*/true);\n          this._values[index] = value;\n          return this;\n        };\n        Map.prototype.delete = function (key) {\n          var index = this._find(key, /*insert*/false);\n          if (index >= 0) {\n            var size = this._keys.length;\n            for (var i = index + 1; i < size; i++) {\n              this._keys[i - 1] = this._keys[i];\n              this._values[i - 1] = this._values[i];\n            }\n            this._keys.length--;\n            this._values.length--;\n            if (SameValueZero(key, this._cacheKey)) {\n              this._cacheKey = cacheSentinel;\n              this._cacheIndex = -2;\n            }\n            return true;\n          }\n          return false;\n        };\n        Map.prototype.clear = function () {\n          this._keys.length = 0;\n          this._values.length = 0;\n          this._cacheKey = cacheSentinel;\n          this._cacheIndex = -2;\n        };\n        Map.prototype.keys = function () {\n          return new MapIterator(this._keys, this._values, getKey);\n        };\n        Map.prototype.values = function () {\n          return new MapIterator(this._keys, this._values, getValue);\n        };\n        Map.prototype.entries = function () {\n          return new MapIterator(this._keys, this._values, getEntry);\n        };\n        Map.prototype[\"@@iterator\"] = function () {\n          return this.entries();\n        };\n        Map.prototype[iteratorSymbol] = function () {\n          return this.entries();\n        };\n        Map.prototype._find = function (key, insert) {\n          if (!SameValueZero(this._cacheKey, key)) {\n            this._cacheIndex = -1;\n            for (var i = 0; i < this._keys.length; i++) {\n              if (SameValueZero(this._keys[i], key)) {\n                this._cacheIndex = i;\n                break;\n              }\n            }\n          }\n          if (this._cacheIndex < 0 && insert) {\n            this._cacheIndex = this._keys.length;\n            this._keys.push(key);\n            this._values.push(undefined);\n          }\n          return this._cacheIndex;\n        };\n        return Map;\n      }();\n      return Map;\n      function getKey(key, _) {\n        return key;\n      }\n      function getValue(_, value) {\n        return value;\n      }\n      function getEntry(key, value) {\n        return [key, value];\n      }\n    }\n    // naive Set shim\n    function CreateSetPolyfill() {\n      var Set = /** @class */function () {\n        function Set() {\n          this._map = new _Map();\n        }\n        Object.defineProperty(Set.prototype, \"size\", {\n          get: function () {\n            return this._map.size;\n          },\n          enumerable: true,\n          configurable: true\n        });\n        Set.prototype.has = function (value) {\n          return this._map.has(value);\n        };\n        Set.prototype.add = function (value) {\n          return this._map.set(value, value), this;\n        };\n        Set.prototype.delete = function (value) {\n          return this._map.delete(value);\n        };\n        Set.prototype.clear = function () {\n          this._map.clear();\n        };\n        Set.prototype.keys = function () {\n          return this._map.keys();\n        };\n        Set.prototype.values = function () {\n          return this._map.keys();\n        };\n        Set.prototype.entries = function () {\n          return this._map.entries();\n        };\n        Set.prototype[\"@@iterator\"] = function () {\n          return this.keys();\n        };\n        Set.prototype[iteratorSymbol] = function () {\n          return this.keys();\n        };\n        return Set;\n      }();\n      return Set;\n    }\n    // naive WeakMap shim\n    function CreateWeakMapPolyfill() {\n      var UUID_SIZE = 16;\n      var keys = HashMap.create();\n      var rootKey = CreateUniqueKey();\n      return /** @class */function () {\n        function WeakMap() {\n          this._key = CreateUniqueKey();\n        }\n        WeakMap.prototype.has = function (target) {\n          var table = GetOrCreateWeakMapTable(target, /*create*/false);\n          return table !== undefined ? HashMap.has(table, this._key) : false;\n        };\n        WeakMap.prototype.get = function (target) {\n          var table = GetOrCreateWeakMapTable(target, /*create*/false);\n          return table !== undefined ? HashMap.get(table, this._key) : undefined;\n        };\n        WeakMap.prototype.set = function (target, value) {\n          var table = GetOrCreateWeakMapTable(target, /*create*/true);\n          table[this._key] = value;\n          return this;\n        };\n        WeakMap.prototype.delete = function (target) {\n          var table = GetOrCreateWeakMapTable(target, /*create*/false);\n          return table !== undefined ? delete table[this._key] : false;\n        };\n        WeakMap.prototype.clear = function () {\n          // NOTE: not a real clear, just makes the previous data unreachable\n          this._key = CreateUniqueKey();\n        };\n        return WeakMap;\n      }();\n      function CreateUniqueKey() {\n        var key;\n        do key = \"@@WeakMap@@\" + CreateUUID(); while (HashMap.has(keys, key));\n        keys[key] = true;\n        return key;\n      }\n      function GetOrCreateWeakMapTable(target, create) {\n        if (!hasOwn.call(target, rootKey)) {\n          if (!create) return undefined;\n          Object.defineProperty(target, rootKey, {\n            value: HashMap.create()\n          });\n        }\n        return target[rootKey];\n      }\n      function FillRandomBytes(buffer, size) {\n        for (var i = 0; i < size; ++i) buffer[i] = Math.random() * 0xff | 0;\n        return buffer;\n      }\n      function GenRandomBytes(size) {\n        if (typeof Uint8Array === \"function\") {\n          var array = new Uint8Array(size);\n          if (typeof crypto !== \"undefined\") {\n            crypto.getRandomValues(array);\n          } else if (typeof msCrypto !== \"undefined\") {\n            msCrypto.getRandomValues(array);\n          } else {\n            FillRandomBytes(array, size);\n          }\n          return array;\n        }\n        return FillRandomBytes(new Array(size), size);\n      }\n      function CreateUUID() {\n        var data = GenRandomBytes(UUID_SIZE);\n        // mark as random - RFC 4122 § 4.4\n        data[6] = data[6] & 0x4f | 0x40;\n        data[8] = data[8] & 0xbf | 0x80;\n        var result = \"\";\n        for (var offset = 0; offset < UUID_SIZE; ++offset) {\n          var byte = data[offset];\n          if (offset === 4 || offset === 6 || offset === 8) result += \"-\";\n          if (byte < 16) result += \"0\";\n          result += byte.toString(16).toLowerCase();\n        }\n        return result;\n      }\n    }\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n    function MakeDictionary(obj) {\n      obj.__ = undefined;\n      delete obj.__;\n      return obj;\n    }\n  });\n})(Reflect || (Reflect = {}));"],
  "mappings": "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",
  "names": ["Reflect", "hasOwn", "metadataRegistry", "metadata", "OrdinaryDefineOwnMetadata", "OrdinaryHasOwnMetadata", "OrdinaryGetOwnMetadata", "OrdinaryOwnMetadataKeys", "defineMetadata", "hasOwnMetadata", "getOwnMetadata", "getOwnMetadataKeys", "deleteMetadata", "MapIterator", "Map", "Set", "WeakMap"]
}
